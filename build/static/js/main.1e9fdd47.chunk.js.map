{"version":3,"sources":["hooks/useLocalStorage.js","contexts/AuthContext.js","hoc/isAuthenticated.js","hoc/isGuest.js","contexts/UpdateContextFooter.js","contexts/NotificationContext.js","hooks/useScrollToTop.js","config/baseUrl.js","services/authService.js","helpers/errorsCheck.js","components/Register/Register.js","components/common/Notification/Notification.js","components/Header/Header.js","components/Login/Login.js","components/CommentCards/CommentsDetails/CommentsDetails.js","services/stadiumService.js","components/Details/Details.js","components/Delete/Delete.js","helpers/countryList.js","helpers/getGoogleMapEmbedLink.js","components/Edit/Edit.js","components/Create/Create.js","components/StadiumCards/StadiumCardLatestFooter/StadiumCardLatestFooter.js","components/CommentCards/CommentsLatestFooter/CommentsLatestFooter.js","components/Footer/Footer.js","components/StadiumCards/StadiumCardHome/StadiumCardHome.js","components/Home/Filters/FilterNavigation/FilterNavigation.js","components/Home/Home.js","components/Logout/Logout.js","components/MyStadiums/MyStadiums.js","components/CommentCards/CommentsMyProfileCard/CommentsMyProfileCard.js","components/StadiumCards/StadiumCardMyProfile/StadiumCardMyProfile.js","components/MyProfile/MyProfile.js","components/NotFound/NotFound.js","components/Home/Filters/LikedStadiums/LikedStadiums.js","components/Home/Filters/CommentedStadiums/CommentedStadiums.js","components/StadiumCards/StadiumCardHomeCapacity/StadiumCardHomeCapacity.js","components/Home/Filters/BiggestCapacity/BiggestCapacity.js","helpers/sortStadiumsByAlphabeticalOrder.js","components/Home/Filters/AlphabeticalOrder/AlphabeticalOrder.js","components/Home/Filters/ByCountry/ByCountryNavigation/ByCountryNavigation.js","components/Home/Filters/ByCountry/ByCountry.js","components/Home/Filters/ByCountry/ByCountryView/ByCountryView.js","components/Users/UserCard/UserCard.js","components/Users/Users.js","components/UserDetails/UserDetails.js","components/common/ErrorBoundary.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","localStorage","getItem","JSON","parse","err","console","log","state","setState","value","setItem","stringify","initialAuthState","_id","email","accessToken","isAuthenticated","AuthContext","createContext","AuthProvider","children","user","setUser","Provider","login","authData","logout","Boolean","useAuthContext","useContext","isAuth","Component","props","to","isGuest","UpdateContext","initialUpdateStateComment","comment","type","initialUpdateStateStadium","stadium","UpdateProvider","updateComment","setUpdateComment","addUpdateComment","useCallback","hideUpdateComment","updateStadium","setUpdateStadium","addUpdateStadium","hideUpdateStadium","useUpdateContext","NotificationContext","types","error","warn","info","success","initialNotificationState","show","message","NotificationProvider","notification","setNotification","addNotification","setTimeout","hideNotification","useNotificationContext","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","activeURL","baseUrl","password","a","fetch","method","headers","body","response","ok","Error","statusText","json","loginResult","register","regResult","token","getUserInfo","userId","userInfo","result","Object","values","updateUsername","username","createUserData","getUserStadiumComments","mystadiumComments","getAllUsers","users","updateAboutMe","aboutMe","errorsCheck","obj","keys","some","k","Register","history","useHistory","name","credentials","errors","setErrors","serverResponse","setServerResponse","validatePassword","e","target","match","className","onSubmit","preventDefault","formData","FormData","currentTarget","get","trim","authService","then","userData","push","catch","placeholder","required","onBlur","Notification","Header","navigationGuest","navigationUser","rel","href","Login","id","CommentCard","stadiumComments","setUserInfo","_ownerId","src","avatar","alt","Date","_createdOn","toString","getAll","stadiums","create","stadiumData","likes","getOne","stadiumId","edit","deleteStadium","getMyStadiums","getLatestStadiums","addComment","getStadiumComments","getLatestComments","comments","getStadiumLikes","addLike","getLikedStadiums","stadiumIds","getCommentedStadiums","getAllByCapacity","getCountryStadiums","country","getCountryList","countryList","Details","params","setStadium","stadiumService","stadiumResult","x","isLiked","likeElement","onClick","imageUrl","title","address","length","city","capacity","clubs","description","map","newComment","postId","reset","readOnly","rows","Delete","getGoogleMapLinkEmbed","iframe","url","exec","Edit","toLowerCase","addressRaw","newStadium","defaultValue","onChange","s","currentName","Create","StadiumCardLatestFooter","CommentsLatestFooter","latestComments","slice","undefined","Footer","setStadiums","setLatestComments","StadiumCardHome","FilterNavigation","Home","res","search","filterStadiums","filter","includes","Logout","MyStadiums","CommentCardMyProfile","myStadiumComments","StadiumCardMyProfile","MyProfile","usernameError","setUsernameError","aboutError","setAboutError","setStadiumComments","stadiumCommentsResult","NotFound","LikedStadiums","stadiumsAll","setStadiumsAll","likedStadiums","setLikedStadiums","CommentedStadiums","commentedStadiums","setCommentedStadiums","StadiumCardHomeCapacity","BiggestCapacity","sortStadiums","sort","b","localeCompare","AlphabeticalOrder","sortedResult","sortStadiumsByAlphabeticalOrder","ByCountryNavigation","countries","ByCountry","setCountryList","sortAphabetically","ByCountryView","UserCard","Users","setUsers","filterUsers","userEntry","UserDetails","ErrorBoundary","this","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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E,CAAC8G,EAAW/I,EAAKN,YAAakC,EAAkB+D,EAAShD,IAGxD,kCACI,kCACwB,KAAnBsD,EACK,6BAAKA,IACL,WC8JPgE,GAxMK,CAChB,wBACA,cACA,UACA,UACA,UACA,SACA,sBACA,YACA,UACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,SACA,UACA,yBACA,WACA,SACA,SACA,WACA,eACA,UACA,mBACA,aACA,WACA,WACA,SACA,2BACA,OACA,QACA,QACA,WACA,UACA,QACA,aACA,UACA,OACA,SACA,iBACA,mCACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,UACA,oBACA,UACA,UACA,WACA,WACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,gBACA,SACA,QACA,WACA,WACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,SACA,QACA,UACA,QACA,SACA,aACA,QACA,WACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,YACA,SACA,aACA,UACA,SACA,WACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,cACA,cACA,YACA,QACA,UACA,cACA,kBACA,SACA,OACA,WACA,QACA,kBACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,QACA,UACA,SACA,SACA,wBACA,cACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,kBACA,UACA,eACA,cACA,cACA,QACA,YACA,QACA,WACA,SACA,cACA,QACA,aACA,WACA,WACA,cACA,OACA,QACA,sBACA,UACA,SACA,eACA,SACA,SACA,UACA,uBACA,iBACA,2BACA,UACA,aACA,UACA,YACA,UACA,QACA,SACA,YCtLWyB,GAfe,SAACC,GAE3B,IAAIC,EAAM,GAINnH,EAFU,2BAEOoH,KAAKF,GAM1B,OAJe,OAAXlH,IACAmH,EA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","file":"static/js/main.1e9fdd47.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n    const [state, setState] = useState(() => {\n        try {\n            let item = localStorage.getItem(key);\n\n            return item \n                ? JSON.parse(item) \n                : initialValue;\n        } catch(err) {\n            console.log(err);\n            return initialValue;\n        }\n    });\n\n    const setItem = (value) => {\n        try {\n            localStorage.setItem(key, JSON.stringify(value))\n\n            setState(value);\n        } catch(err) {\n            console.log(err);\n        }\n    };\n\n    return [\n        state,\n        setItem\n    ];\n};\n\nexport default useLocalStorage;","import { createContext, useContext } from 'react';\n\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst initialAuthState = {\n    _id: '',\n    email: '',\n    accessToken: '',\n    isAuthenticated: ''\n};\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useLocalStorage('user', initialAuthState);\n\n    const login = (authData) => {\n        setUser(authData);\n    }\n\n    const logout = () => {\n        setUser(initialAuthState);\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, login, logout, isAuthenticated: Boolean(user.email) }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuthContext = () => {\n    const authState = useContext(AuthContext);\n\n    return authState;\n}","import { Redirect } from 'react-router-dom';\n\nimport { useAuthContext } from '../contexts/AuthContext.js';\n\nexport const isAuth = (Component) => {\n\n    const WrapperComponent = (props) => {\n        const { isAuthenticated, user } = useAuthContext();\n\n        return isAuthenticated\n            ? <Component {...props} user={user} />\n            : <Redirect to=\"/login\" />\n    }\n\n    return WrapperComponent;\n};\n","import { Redirect } from 'react-router-dom';\n\nimport { useAuthContext } from '../contexts/AuthContext.js';\n\nexport const isGuest = (Component) => {\n\n    const WrapperComponent = (props) => {\n        const { isAuthenticated } = useAuthContext();\n\n        return isAuthenticated\n            ? <Redirect to=\"/\" />\n            : <Component {...props} />\n    }\n\n    return WrapperComponent;\n};\n","import { createContext, useContext, useState, useCallback } from \"react\";\n\nexport const UpdateContext = createContext();\n\nconst initialUpdateStateComment = { comment: false, type: 'default' };\nconst initialUpdateStateStadium = { stadium: false, type: 'default' };\n\nexport const UpdateProvider = ({\n    children\n}) => {\n    const [updateComment, setUpdateComment] = useState(initialUpdateStateComment);\n\n    const addUpdateComment = useCallback((type) => {\n        setUpdateComment({ comment: true, type });\n    }, []);\n    \n    const hideUpdateComment = useCallback(() => setUpdateComment(initialUpdateStateComment), []);\n\n\n    const [updateStadium, setUpdateStadium] = useState(initialUpdateStateStadium);\n\n    const addUpdateStadium = useCallback((type) => {\n        setUpdateStadium({ stadium: true, type });\n    }, []);\n\n    const hideUpdateStadium = useCallback(() => setUpdateStadium(initialUpdateStateStadium), []);\n\n    return (\n        <UpdateContext.Provider value={{ updateComment, updateStadium, addUpdateComment, addUpdateStadium, hideUpdateComment, hideUpdateStadium }}>\n            {children}\n        </UpdateContext.Provider>\n    )\n};\n\nexport const useUpdateContext = () => {\n    const state = useContext(UpdateContext);\n\n    return state;\n};\n","import { createContext, useContext, useState, useCallback } from \"react\";\n\nexport const NotificationContext = createContext();\n\nexport const types = {\n    error: 'Failed',\n    warn: 'Warning',\n    info: 'Info',\n    success: 'Success',\n};\n\nconst initialNotificationState = { show: false, message: '', type: types.error };\n\nexport const NotificationProvider = ({\n    children\n}) => {\n    const [notification, setNotification] = useState(initialNotificationState);\n\n    const addNotification = useCallback((message, type = types.error) => {\n        setNotification({show: true, message, type});\n\n        setTimeout(() => {\n            setNotification(initialNotificationState);\n        }, 5000);\n    }, []);\n\n    const hideNotification = useCallback(() => setNotification(initialNotificationState), [])\n\n    return (\n        <NotificationContext.Provider value={{notification, addNotification, hideNotification}}>\n            {children}\n        </NotificationContext.Provider>\n    )\n};\n\nexport const useNotificationContext = () => {\n    const state = useContext(NotificationContext);\n\n    return state;\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","const BASEURLOPTIONS = {\n    local: 'http://localhost:3030',\n    web: 'https://softuni-server-world-stadia.herokuapp.com'\n}\n\nconst activeURL = BASEURLOPTIONS.web;\n\nexport default activeURL;","import activeURL from '../config/baseUrl.js'\n\nconst baseUrl = activeURL;\n\nexport const login = async (email, password) => {\n\n    let response = await fetch(`${baseUrl}/users/login`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let loginResult = await response.json();\n\n    return loginResult;\n};\n\nexport const register = async (email, password) => {\n    let response = await fetch(`${baseUrl}/users/register`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let regResult = await response.json();\n\n    return regResult;\n\n};\n\nexport const logout = async (token) => {\n\n    return fetch(`${baseUrl}/users/logout`, {\n        headers: {\n            'X-Authorization': token,\n        }\n    })\n}\n\nexport const getUserInfo = async (userId) => {\n\n    let response = await fetch(`${baseUrl}/data/userData?where=_ownerId%3D%22${userId}%22`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let userInfo = await response.json();\n\n    let result = Object.values(userInfo)[0];\n\n    return result;\n};\n\n\nexport const updateUsername = async (userInfo, username, token) => {\n    let response = await fetch(`${baseUrl}/data/userData/${userInfo._id}`, {\n        method: 'PUT',\n        headers: {\n            'content-type': 'application/json',\n            'X-Authorization': token,\n        },\n        body: JSON.stringify({ ...userInfo, username })\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let result = await response.json();\n\n    return result;\n};\n\nexport const createUserData = async (token, email) => {\n    let response = await fetch(`${baseUrl}/data/userData`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'X-Authorization': token,\n        },\n        body: JSON.stringify({\n            \"avatar\": \"/images/avatar.png\",\n            \"email\": email,\n            \"aboutMe\": \"\",\n            \"username\": \"Please add your nickname\",\n        })\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let result = await response.json();\n\n    return result;\n};\n\nexport const getUserStadiumComments = async (userId) => {\n\n    let response = await fetch(`${baseUrl}/data/comments?where=_ownerId%3D%22${userId}%22&sortBy=_createdOn%20desc`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let mystadiumComments = await response.json();\n\n    return mystadiumComments;\n};\n\nexport const getAllUsers = async () => {\n    let response = await fetch(`${baseUrl}/data/userData`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let users = await response.json();\n\n    // let result = Object.values(users);\n\n    return users;\n};\n\n\nexport const updateAboutMe = async (userInfo, aboutMe, token) => {\n    let response = await fetch(`${baseUrl}/data/userData/${userInfo._id}`, {\n        method: 'PUT',\n        headers: {\n            'content-type': 'application/json',\n            'X-Authorization': token,\n        },\n        body: JSON.stringify({ ...userInfo, aboutMe })\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let result = await response.json();\n\n    return result;\n};\n\nexport const searchUser = async function (searchInput) {\n\n    let response = await fetch(`${baseUrl}/data/userData?where=email%3D%22${searchInput}%22`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let user = await response.json();\n\n    let result = Object.values(user);\n\n    return result;\n\n}\n\nexport const updateAvatar = async (userInfo, avatar, token) => {\n    let response = await fetch(`${baseUrl}/data/userData/${userInfo._id}`, {\n        method: 'PUT',\n        headers: {\n            'content-type': 'application/json',\n            'X-Authorization': token,\n        },\n        body: JSON.stringify({ ...userInfo, avatar })\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let result = await response.json();\n\n    return result;\n};","const errorsCheck = (obj, value) => {\n    let result = Object.keys(obj).some(function (k) {\n        return obj[k] !== value;\n    });\n    return result;\n}\n\nexport default errorsCheck;","import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { useAuthContext } from '../../contexts/AuthContext.js';\nimport { useNotificationContext, types } from '../../contexts/NotificationContext';\n\nimport * as authService from '../../services/authService.js';\nimport errorsCheck from '../../helpers/errorsCheck.js';\nimport '../Register/Register.css';\n\nconst Register = () => {\n\n    const { login } = useAuthContext();\n    const { addNotification } = useNotificationContext();\n\n    let history = useHistory();\n    const [errors, setErrors] = useState({\n        name: false,\n        password: false,\n        credentials: false,\n    });\n\n    let [serverResponse, setServerResponse] = useState('');\n\n    const registerSubmitHandler = (e) => {\n        e.preventDefault();\n\n        let formData = new FormData(e.currentTarget);\n\n        let email = formData.get('email').trim();\n        let password = formData.get('password').trim();\n        let repeatPassword = formData.get('repeatPassword').trim();\n\n        if (password != repeatPassword) {\n            return setErrors(state => ({ ...state, credentials: 'Passwords do not match' }));\n        } else {\n            setErrors(state => ({ ...state, credentials: false }));\n        }\n\n        if (errorsCheck(errors, false)) {\n            return;\n        }\n\n        authService.register(email, password)\n            .then(authData => {\n                let userData = { _id: authData._id, email: authData.email, accessToken: authData.accessToken };\n                login(userData);\n                addNotification('You registered successfully. Welcome!', types.success);\n            })\n            .then(() => {\n                history.push('/');\n                // history.push('/welcome');\n            })\n            .catch(err => {\n                console.log(err);\n                setServerResponse(err.message);\n                addNotification(`An error occurred - ${err.message}`, types.error);\n            })\n    }\n\n    const validateEmail = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^\\w+@{1}\\w+\\.{1}[a-z]{2,3}$/i)) {\n            setErrors(state => ({ ...state, email: 'Please add valid email address' }));\n        } else {\n            setErrors(state => ({ ...state, email: false }));\n        }\n    };\n\n    const validatePassword = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^[a-zA-Z0-9]{6,}$/)) {\n            setErrors(state => ({ ...state, password: 'Minimum length is 6 characters. Only English letters and numbers are allowed' }));\n        } else {\n            setErrors(state => ({ ...state, password: false }));\n        }\n    };\n\n    return (\n        <section className=\"auth\">\n            <article className=\"auth-heading\">\n                <h3>Signup</h3>\n            </article>\n            <form className=\"auth-form\" onSubmit={registerSubmitHandler} method=\"POST\">\n                <article className=\"form-group\">\n                    <input type=\"email\" name=\"email\" className=\"auth-input\" placeholder=\"email\" required onBlur={validateEmail} />\n                    {errors.email\n                        ? <p className=\"error\">{errors.email}</p>\n                        : null\n                    }\n                </article>\n                <article className=\"form-group\">\n                    <input type=\"password\" name=\"password\" className=\"auth-input\" placeholder=\"password\" required onBlur={validatePassword} />\n                </article>\n                <article className=\"form-group\">\n                    <input type=\"password\" name=\"repeatPassword\" className=\"auth-input\" placeholder=\"repeat password\" required onBlur={validatePassword} />\n                    {errors.password\n                        ? <p className=\"error\">{errors.password}</p>\n                        : null\n                    }\n                    {errors.credentials\n                        ? <p className=\"error\">{errors.credentials}</p>\n                        : null\n                    }\n                </article>\n                {serverResponse !== ''\n                    ? <article className=\"error\">Cannot register due to {serverResponse}. Please make sure your password and email address are correct</article>\n                    : null\n                }\n                <article className=\"form-group\">\n                    <button className=\"btn-submit\" type=\"submit\">Register Now</button>\n                </article>\n                <article className=\"switch-form\">\n                    <p>Already have an account? <Link to=\"/login\"><span>Go to Login</span></Link></p>\n                </article>\n\n            </form>\n        </section>\n    );\n}\n\nexport default Register;\n","import { useNotificationContext } from '../../../contexts/NotificationContext.js';\nimport '../Notification//Notification.css';\n\nconst Notification = () => {\n    const { notification } = useNotificationContext();\n\n    if (!notification.show) {\n        return null;\n    }\n\n    return (\n        <>\n            <p className=\"notification-world-stadia\">{notification.type}</p>\n            <p className=\"notification-world-stadia-message\">{notification.message}</p>\n        </>\n    );\n};\n\nexport default Notification;","import { Link } from 'react-router-dom';\n// import { useEffect } from 'react';\n\nimport { useAuthContext } from '../../contexts/AuthContext.js';\nimport { useNotificationContext } from '../../contexts/NotificationContext.js';\n\nimport Notification from '../common/Notification/Notification.js';\nimport '../Header/Header.css'\n\nconst Header = () => {\n\n    const { user } = useAuthContext();\n    const { notification } = useNotificationContext();\n\n    // useEffect(() => {\n    //     window.addEventListener('scroll', isSticky);\n    //     return () => {\n    //         window.removeEventListener('scroll', isSticky);\n    //     };\n    // }, []);\n\n    // const isSticky = (e) => {\n    //     const header = document.querySelector('.header-section');\n    //     const scrollTop = window.scrollY;\n    //     scrollTop >= 250 ? header.classList.add('is-sticky') : header.classList.remove('is-sticky');\n    // };\n\n    let navigationGuest = (\n        <>\n            <li> <Link to=\"/login\">Login</Link></li>\n            <li> <Link to=\"/register\">Register</Link></li>\n        </>\n    );\n\n    let navigationUser = (\n        <>\n            <li> <Link to=\"/my-profile\">{user.email}</Link></li>\n            <li> <Link to=\"/logout\">Logout</Link></li>\n        </>\n    );\n\n    return (\n            <header className=\"header-section\">\n                <nav className=\"header-navigation\">\n                    <ul className=\"header-row\">\n                        <li>\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/milen-hristov/world-stadia\">\n                                <i className=\"fab fa-github\"></i>\n                            </a>\n                        </li>\n                        <li>\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/in/milenhristovbg/\">\n                                <i className=\"fab fa-linkedin\"></i>\n                            </a>\n                        </li>\n                        {user.email\n                            ? navigationUser\n                            : navigationGuest\n                        }\n                    </ul>\n                    <ul className=\"header-row\">\n                        <li >\n                            <Link to=\"/home/all\"> Home</Link>\n                        </li>\n                        {user.email\n                            ? (\n                                <>\n                                    <li>\n                                        <Link to=\"/stadiums/create\"> Create</Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/users\">Users</Link>\n                                    </li>\n                                </>\n                            )\n                            : null\n                        }\n                        {user.email\n                            ? (\n                                <>\n                                    <li>\n                                        <Link to=\"/my-profile\">My Profile</Link>\n                                    </li>\n                                    <li className=\"my-stadiums-header\">\n                                        <Link to=\"/my-stadiums\">My Stadiums</Link>\n                                    </li>\n                                </>)\n\n                            : <li><Link to=\"/login\">I'm Guest</Link></li>\n                        }\n                    </ul>\n                </nav>\n\n                <section className=\"notification\">\n                    <article >\n                        {notification.show\n                            ? <Notification />\n                            : <p className=\"notification-world-stadia\">World Stadia</p>\n                        }\n                    </article>\n                </section>\n            </header>\n    );\n}\n\nexport default Header;\n","import { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuthContext } from '../../contexts/AuthContext.js';\nimport { useNotificationContext, types } from '../../contexts/NotificationContext';\n\nimport * as authService from '../../services/authService.js';\nimport '../Login/Login.css';\n\nconst Login = () => {\n\n    let history = useHistory();\n    const { login } = useAuthContext();\n    let [serverResponse, setServerResponse] = useState('');\n    const { addNotification } = useNotificationContext();\n\n    const onLoginHandler = (e) => {\n        e.preventDefault();\n\n        let formData = new FormData(e.currentTarget);\n\n        let email = formData.get('email').trim();\n        let password = formData.get('password').trim();\n\n        authService.login(email, password)\n            .then((authData) => {\n                let userData = { _id: authData._id, email: authData.email, accessToken: authData.accessToken };\n                login(userData);\n                addNotification('You logged in successfully', types.success);\n            })\n            .then(() => {\n                // history.push('/welcome');\n                history.push('/');\n            })\n            .catch(err => {\n                setServerResponse(err.message);\n                addNotification(`An error occurred - ${err.message}`, types.error);\n            });\n    }\n\n    return (\n        <section className=\"auth\">\n            <article className=\"auth-heading\">\n                <h3>Login</h3>\n            </article>\n            <form className=\"auth-form\" onSubmit={onLoginHandler} method=\"POST\">\n                <article className=\"form-group\">\n                    <input type=\"text\" name=\"email\" id=\"email\" className=\"auth-input\" placeholder=\"email\" required />\n                </article>\n                <article className=\"form-group\">\n                    <input type=\"password\" name=\"password\" id=\"password\" className=\"auth-input\" placeholder=\"password\" required />\n                </article>\n                <article className=\"form-group\">\n                    {serverResponse !== ''\n                        ? <p className=\"error\">Cannot login due to {serverResponse}. Please make sure your password and email address are correct</p>\n                        : null\n                    }\n                </article>\n                <article className=\"form-group\">\n                    <button className=\"btn-submit\" type=\"submit\">Login Now</button>\n                </article>\n                <article className=\"switch-form\">\n                    <p>Don't have an account yet? <Link to=\"/register\"><span>Sign Up Now</span></Link></p>\n                </article>\n            </form>\n        </section>\n    );\n}\n\nexport default Login;\n","import { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport * as authService from '../../../services/authService.js';\nimport './CommentsDetails.css';\n\nconst CommentCard = ({\n    stadiumComments,\n}) => {\n\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(() => {\n        authService.getUserInfo(stadiumComments._ownerId)\n            .then(userInfo => {\n                // console.log(userInfo)\n                setUserInfo(userInfo);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [stadiumComments._ownerId]);\n\n    return (\n        <article className=\"comment-card\">\n            <article className=\"image-container\">\n                <Link to={`/users/${userInfo._ownerId}`}>\n                    <img src={userInfo?.avatar} alt=\"avatar\" />\n                </Link>\n            </article>\n            <article className=\"comment-container\">\n                <span className=\"comment-date\"><time >{new Date(stadiumComments._createdOn).toString()}</time></span>\n                <article className=\"comment-user\">\n                    <h3> <Link to={`/users/${userInfo._ownerId}`}> {userInfo?.email} </Link>\n                        {userInfo?.username !== \"Please add your nickname\"\n                            ? <span> / {userInfo?.username}</span>\n                            : null\n                        }\n                    </h3>\n                </article>\n                <article className=\"comment-description\">\n                    <p>{stadiumComments?.message}</p>\n                </article>\n            </article>\n        </article>\n    );\n}\n\nexport default CommentCard;\n","import activeURL from '../config/baseUrl.js'\n\nconst baseUrl = `${activeURL}/data`;\n\nexport const getAll = async () => {\n    let response = await fetch(`${baseUrl}/stadiums`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiums = await response.json();\n\n    let result = Object.values(stadiums);\n\n    return result;\n};\n\nexport const create = async (stadiumData, token) => {\n    let response = await fetch(`${baseUrl}/stadiums`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'X-Authorization': token,\n        },\n        body: JSON.stringify({ ...stadiumData, likes: [] })\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let result = await response.json();\n\n    return result;\n};\n\nexport const getOne = async (stadiumId) => {\n\n    let response = await fetch(`${baseUrl}/stadiums/${stadiumId}`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadium = await response.json();\n\n    return stadium;\n\n};\n\nexport const edit = async (id, stadiumData, token) => {\n    let response = await fetch(`${baseUrl}/stadiums/${id}`, {\n        method: 'PUT',\n        headers: {\n            'content-type': 'application/json',\n            'X-Authorization': token,\n        },\n        body: JSON.stringify(stadiumData)\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let result = await response.json();\n\n    return result;\n};\n\nexport const deleteStadium = async (id, token) => {\n    let response = await fetch(`${baseUrl}/stadiums/${id}`, {\n        method: 'DELETE',\n        headers: {\n            'content-type': 'application/json',\n            'X-Authorization': token,\n        },\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let result = await response.json();\n\n    return result;\n};\n\n\nexport const getMyStadiums = async function (userId) {\n\n    let response = await fetch(`${baseUrl}/stadiums?where=_ownerId%3D%22${userId}%22&sortBy=_createdOn%20desc`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiums = await response.json();\n\n    let result = Object.values(stadiums);\n\n    return result;\n\n}\n\nexport const getLatestStadiums = async () => {\n    let response = await fetch(`${baseUrl}/stadiums?sortBy=_createdOn%20desc`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiums = await response.json();\n\n    let result = Object.values(stadiums)\n\n    return result;\n};\n\nexport const addComment = async (addComment, token) => {\n    let response = await fetch(`${baseUrl}/comments`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'X-Authorization': token,\n        },\n        body: JSON.stringify(addComment)\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let result = await response.json();\n\n    return result;\n};\n\nexport const getStadiumComments = async (stadiumId) => {\n\n    let response = await fetch(`${baseUrl}/comments?where=stadiumId%3D%22${stadiumId}%22`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiumComments = await response.json();\n\n    return stadiumComments;\n};\n\nexport const getLatestComments = async () => {\n    let response = await fetch(`${baseUrl}/comments?sortBy=_createdOn%20desc`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let comments = await response.json();\n\n    let result = Object.values(comments);\n\n    return result;\n};\n\nexport const getStadiumLikes = async (stadiumId) => {\n\n    let response = await fetch(`${baseUrl}/likes?where=stadiumId%3D%22${stadiumId}%22`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiumComments = await response.json();\n\n    return stadiumComments;\n};\n\nexport const addLike = async (addLike, token) => {\n    let response = await fetch(`${baseUrl}/likes`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'X-Authorization': token,\n        },\n        body: JSON.stringify(addLike)\n    });\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let result = await response.json();\n\n    return result;\n};\n\nexport const searchStadiums = async function (searchInput) {\n\n    let response = await fetch(`${baseUrl}/stadiums?where=name%3D%22${searchInput}%22`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiums = await response.json();\n\n    let result = Object.values(stadiums);\n\n    return result;\n\n}\n\nexport const getLikedStadiums = async function () {\n\n    let response = await fetch(`${baseUrl}/likes?distinct=stadiumId`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiums = await response.json();\n\n    let stadiumIds = [];\n\n    for (const key in stadiums) {\n        stadiumIds.push(stadiums[key].stadiumId);\n    }\n\n    return stadiumIds;\n\n}\n\nexport const getCommentedStadiums = async function () {\n\n    let response = await fetch(`${baseUrl}/comments?distinct=stadiumId`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiums = await response.json();\n\n    let stadiumIds = [];\n\n    for (const key in stadiums) {\n        stadiumIds.push(stadiums[key].stadiumId);\n    }\n\n    return stadiumIds;\n\n}\n\nexport const getAllByCapacity = async () => {\n    let response = await fetch(`${baseUrl}/stadiums?sortBy=capacity%20desc`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiums = await response.json();\n\n    let result = Object.values(stadiums);\n\n    return result;\n};\n\n\nexport const getCountryStadiums = async function (country) {\n\n    let response = await fetch(`${baseUrl}/stadiums?where=country%3D%22${country}%22`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiums = await response.json();\n\n    return stadiums;\n\n}\n\nexport const getCountryList = async function () {\n\n    let response = await fetch(`${baseUrl}/stadiums?distinct=country`);\n\n    if (response.ok === false) {\n        throw new Error(response.statusText);\n    }\n\n    let stadiums = await response.json();\n\n    let countryList = [];\n\n    for (const key in stadiums) {\n        countryList.push(stadiums[key].country);\n    }\n\n    return countryList;\n\n}","import { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { useUpdateContext } from '../../contexts/UpdateContextFooter.js';\nimport { useNotificationContext, types } from '../../contexts/NotificationContext';\n\nimport CommentCard from '../CommentCards/CommentsDetails/CommentsDetails.js';\nimport * as stadiumService from '../../services/stadiumService.js';\nimport '../Details/Details.css';\n\nconst Details = ({\n    match\n}) => {\n    const { user } = useAuthContext();\n    const { addUpdateComment } = useUpdateContext();\n    const { addNotification } = useNotificationContext();\n    const history = useHistory();\n\n    let stadiumId = match.params.stadiumId;\n\n    const [stadium, setStadium] = useState({});\n    useEffect(() => {\n        stadiumService.getOne(stadiumId)\n            .then(stadiumResult => {\n                setStadium(stadiumResult);\n            })\n            .then(() => {\n                stadiumService.getStadiumComments(stadiumId)\n                    .then(comments => {\n                        // console.log(comments)\n                        setStadium((state => ({ ...state, comments })))\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            })\n            .then(() => {\n                stadiumService.getStadiumLikes(stadiumId)\n                    .then(likes => {\n                        // console.log(likes)\n                        if (likes.some(x => x._ownerId === user._id)) {\n                            setStadium((state => ({ ...state, likes, isLiked: 'Liked' })))\n                        } else {\n                            setStadium((state => ({ ...state, likes, isLiked: 'Not liked' })))\n                        }\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            })\n            .catch(err => {\n                console.log(err);\n                history.push('/NotFound');\n            })\n    }, [stadiumId, history, user._id]);\n\n    const onClickSendComment = (e) => {\n        e.preventDefault();\n\n        let formData = new FormData(e.currentTarget);\n        let message = formData.get('message');\n        let newComment = { stadiumId: stadiumId, message: message, postId: user.accessToken };\n\n        stadiumService.addComment(newComment, user.accessToken)\n            .then(result => {\n                addUpdateComment(newComment);\n                setStadium((state => ({ ...state, comments: [...state.comments, result] })));\n                e.target.reset();\n                addNotification('Comment sent successfully', types.success);\n            })\n            .catch(err => {\n                console.log(err);\n                addNotification(`An error occurred - ${err.message}`, types.error);\n            })\n    }\n\n    const onClickSendLike = (e) => {\n        e.preventDefault();\n\n        let newLike = { stadiumId: stadiumId };\n\n        stadiumService.addLike(newLike, user.accessToken)\n            .then(result => {\n                setStadium((state => ({ ...state, likes: [...state.likes, user._id], isLiked: 'Liked' })));\n                addNotification('Stadium liked successfully', types.success);\n            })\n            .catch(err => {\n                console.log(err);\n                addNotification(`An error occurred - ${err.message}`, types.error);\n            })\n    }\n\n    let likeElement =\n        <>\n            {user._id && (user._id === stadium._ownerId\n                ? null\n                : (\n                    <article>\n                        <button onClick={onClickSendLike} className=\"btn-like\">Like Stadium</button>\n                    </article>\n                )\n            )}\n        </>\n\n    // console.log(stadium)\n\n    return (\n        <>\n            <main>\n                <section className=\"stadium-details-wrapper\">\n                    <section className=\"stadium-column-left\">\n                        <article className=\"stadium-image-details\">\n                            <img src={stadium.imageUrl} alt={stadium.name} />\n                        </article>\n                        <article className=\"stadium-address\">\n                            <iframe title={stadium._id} src={stadium.address}> </iframe>\n                        </article>\n                    </section>\n                    <section className=\"stadium-column-right\">\n                        <article className=\"stadium-header\">\n                            <h3>{stadium.name}</h3>\n                            <span className=\"stadium-country\">{stadium.country}</span>\n                            <h5>Likes: {stadium.likes?.length}</h5>\n                            {stadium.isLiked === \"Liked\"\n                                ? null\n                                : likeElement\n                            }\n                        </article>\n                        <article className=\"stadium-details\">\n                            <table className=\"stadium-details-table\">\n                                <tbody>\n                                    <tr>\n                                        <th>Stadium Name</th>\n                                        <td>{stadium.name}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Country</th>\n                                        <td>{stadium.country}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>City</th>\n                                        <td>{stadium.city}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Capacity</th>\n                                        <td>{stadium.capacity}</td>\n                                    </tr>\n                                    <tr>\n                                        <th>Clubs</th>\n                                        <td>{stadium.clubs}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </article>\n                        <article className=\"stadium-buttons\">\n                            {user._id && (user._id === stadium._ownerId\n                                ? (\n                                    <article className=\"buttons\">\n                                        <p><Link to={`/stadiums/details/${stadium._id}/delete`} className=\"btn-delete\">Delete</Link></p>\n                                        <p><Link to={`/stadiums/details/${stadium._id}/edit`} className=\"btn-edit\">Edit</Link></p>\n                                    </article>\n                                )\n                                : null\n                            )}\n                        </article>\n                    </section>\n                </section>\n                <section className=\"stadium-description\">\n                    <article className=\"info-image-container\">\n                        <img className=\"info-image\" src=\"/images/info.png\" alt=\"info icon\" />\n                    </article>\n                    <article className=\"info-text-container\">\n                        <h2>Info</h2>\n                        <p>{stadium.description}</p>\n                    </article>\n                </section>\n                <section className=\"stadium-comments\">\n                    <section className=\"stadium-comments-all\">\n                        <article className=\"stadium-comments-all-heading\">\n                            <h2>Latest Comments</h2>\n                        </article>\n                        <ul>\n                            {stadium.comments?.length > 0\n                                ? stadium.comments.map(x => <CommentCard key={x._id} stadiumComments={x} />)\n                                : <h2>No comments yet</h2>\n                            }\n                        </ul>\n                    </section>\n                </section>\n                <section className=\"stadium-comments\">\n                    {user.email\n                        ? (\n                            <>\n                                <article className=\"stadium-comments-all-heading\">\n                                    <h2>Leave Your Comment</h2>\n                                </article>\n                                <form className=\"comment-form\" onSubmit={onClickSendComment} method=\"POST\">\n                                    <article className=\"form-group\">\n                                        <input type=\"email\" readOnly name=\"email\" className=\"form-input\" placeholder=\"Email*\" value={user.email} />\n                                    </article>\n                                    <article className=\"form-group\">\n                                        <textarea name=\"message\" className=\"form-textarea\" placeholder=\"Message*\" rows={4} required />\n                                    </article>\n                                    <article>\n                                        <button className=\"btn-comment\" type=\"submit\">send</button>\n                                    </article>\n                                </form>\n                            </>\n                        )\n                        : (\n\n                            <article className=\"stadium-comments-all-heading\">\n                                <h2>Please login to comment</h2>\n                            </article>\n\n                        )}\n                </section>\n            </main>\n        </>\n    );\n}\n\nexport default Details;\n","import { useHistory } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { useNotificationContext, types } from '../../contexts/NotificationContext';\nimport { useUpdateContext } from '../../contexts/UpdateContextFooter.js';\n\nimport * as stadiumService from '../../services/stadiumService.js';\nimport '../Delete/Delete.css';\n\nconst Delete = ({\n    match\n}) => {\n    const history = useHistory();\n    const { user } = useAuthContext();\n    const { addUpdateStadium } = useUpdateContext();\n    const { addNotification } = useNotificationContext();\n\n    let stadiumId = match.params.stadiumId;\n    let [serverResponse, setServerResponse] = useState('');\n\n    useEffect(() => {\n        stadiumService.deleteStadium(stadiumId, user.accessToken)\n            .then((result) => {\n                addUpdateStadium(result);\n            })\n            .then(() => {\n                addNotification('Stadium deleted successfully', types.success);\n                history.push('/home/all');\n            })\n            .catch(err => {\n                console.log(err);\n                setServerResponse(err.message);\n                addNotification(`An error occurred - ${err.message}`, types.error);\n            })\n    }, [stadiumId, user.accessToken, addUpdateStadium, history, addNotification])\n\n    return (\n        <section>\n            <article>\n                {serverResponse !== ''\n                    ? <h3>{serverResponse}</h3>\n                    : null\n                }\n            </article>\n        </section >\n    );\n};\n\nexport default Delete;","const countryList = [\n    \"Please select country\",\n    \"Afghanistan\",\n    \"Albania\",\n    \"Algeria\",\n    \"Andorra\",\n    \"Angola\",\n    \"Antigua and Barbuda\",\n    \"Argentina\",\n    \"Armenia\",\n    \"Australia\",\n    \"Austria\",\n    \"Azerbaijan\",\n    \"Bahamas\",\n    \"Bahrain\",\n    \"Bangladesh\",\n    \"Barbados\",\n    \"Belarus\",\n    \"Belgium\",\n    \"Belize\",\n    \"Benin\",\n    \"Bhutan\",\n    \"Bolivia\",\n    \"Bosnia and Herzegovina\",\n    \"Botswana\",\n    \"Brazil\",\n    \"Brunei\",\n    \"Bulgaria\",\n    \"Burkina Faso\",\n    \"Burundi\",\n    \"Côte d'Ivoire\",\n    \"Cabo Verde\",\n    \"Cambodia\",\n    \"Cameroon\",\n    \"Canada\",\n    \"Central African Republic\",\n    \"Chad\",\n    \"Chile\",\n    \"China\",\n    \"Colombia\",\n    \"Comoros\",\n    \"Congo\",\n    \"Costa Rica\",\n    \"Croatia\",\n    \"Cuba\",\n    \"Cyprus\",\n    \"Czech Republic\",\n    \"Democratic Republic of the Congo\",\n    \"Denmark\",\n    \"Djibouti\",\n    \"Dominica\",\n    \"Dominican Republic\",\n    \"Ecuador\",\n    \"Egypt\",\n    \"El Salvador\",\n    \"England\",\n    \"Equatorial Guinea\",\n    \"Eritrea\",\n    \"Estonia\",\n    \"Eswatini\",\n    \"Ethiopia\",\n    \"Fiji\",\n    \"Finland\",\n    \"France\",\n    \"Gabon\",\n    \"Gambia\",\n    \"Georgia\",\n    \"Germany\",\n    \"Ghana\",\n    \"Greece\",\n    \"Grenada\",\n    \"Guatemala\",\n    \"Guinea\",\n    \"Guinea-Bissau\",\n    \"Guyana\",\n    \"Haiti\",\n    \"Holy See\",\n    \"Honduras\",\n    \"Hungary\",\n    \"Iceland\",\n    \"India\",\n    \"Indonesia\",\n    \"Iran\",\n    \"Iraq\",\n    \"Ireland\",\n    \"Israel\",\n    \"Italy\",\n    \"Jamaica\",\n    \"Japan\",\n    \"Jordan\",\n    \"Kazakhstan\",\n    \"Kenya\",\n    \"Kiribati\",\n    \"Kuwait\",\n    \"Kyrgyzstan\",\n    \"Laos\",\n    \"Latvia\",\n    \"Lebanon\",\n    \"Lesotho\",\n    \"Liberia\",\n    \"Libya\",\n    \"Liechtenstein\",\n    \"Lithuania\",\n    \"Luxembourg\",\n    \"Madagascar\",\n    \"Malawi\",\n    \"Malaysia\",\n    \"Maldives\",\n    \"Mali\",\n    \"Malta\",\n    \"Marshall Islands\",\n    \"Mauritania\",\n    \"Mauritius\",\n    \"Mexico\",\n    \"Micronesia\",\n    \"Moldova\",\n    \"Monaco\",\n    \"Mongolia\",\n    \"Montenegro\",\n    \"Morocco\",\n    \"Mozambique\",\n    \"Myanmar\",\n    \"Namibia\",\n    \"Nauru\",\n    \"Nepal\",\n    \"Netherlands\",\n    \"New Zealand\",\n    \"Nicaragua\",\n    \"Niger\",\n    \"Nigeria\",\n    \"North Korea\",\n    \"North Macedonia\",\n    \"Norway\",\n    \"Oman\",\n    \"Pakistan\",\n    \"Palau\",\n    \"Palestine State\",\n    \"Panama\",\n    \"Papua New Guinea\",\n    \"Paraguay\",\n    \"Peru\",\n    \"Philippines\",\n    \"Poland\",\n    \"Portugal\",\n    \"Qatar\",\n    \"Romania\",\n    \"Russia\",\n    \"Rwanda\",\n    \"Saint Kitts and Nevis\",\n    \"Saint Lucia\",\n    \"Saint Vincent and the Grenadines\",\n    \"Samoa\",\n    \"San Marino\",\n    \"Sao Tome and Principe\",\n    \"Saudi Arabia\",\n    \"Senegal\",\n    \"Serbia\",\n    \"Seychelles\",\n    \"Sierra Leone\",\n    \"Singapore\",\n    \"Slovakia\",\n    \"Slovenia\",\n    \"Solomon Islands\",\n    \"Somalia\",\n    \"South Africa\",\n    \"South Korea\",\n    \"South Sudan\",\n    \"Spain\",\n    \"Sri Lanka\",\n    \"Sudan\",\n    \"Suriname\",\n    \"Sweden\",\n    \"Switzerland\",\n    \"Syria\",\n    \"Tajikistan\",\n    \"Tanzania\",\n    \"Thailand\",\n    \"Timor-Leste\",\n    \"Togo\",\n    \"Tonga\",\n    \"Trinidad and Tobago\",\n    \"Tunisia\",\n    \"Turkey\",\n    \"Turkmenistan\",\n    \"Tuvalu\",\n    \"Uganda\",\n    \"Ukraine\",\n    \"United Arab Emirates\",\n    \"United Kingdom\",\n    \"United States of America\",\n    \"Uruguay\",\n    \"Uzbekistan\",\n    \"Vanuatu\",\n    \"Venezuela\",\n    \"Vietnam\",\n    \"Yemen\",\n    \"Zambia\",\n    \"Zimbabwe\",\n];\n\nexport default countryList;","const getGoogleMapLinkEmbed = (iframe) => {\n\n    let url = '';\n    // let pattern = /(?:<iframe src=\")(?<url>https:\\/\\/[\\w+\\W+\\D+\\d+]+)(?:\" width=\"600\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"><\\/iframe>)/i;\n    let pattern = /https:\\/\\/[\\w./?=!\\-%]+/i;\n\n    let result = pattern.exec(iframe);\n\n    if (result !== null) {\n        url = result[0];\n    }\n\n    return url;\n}\n\nexport default getGoogleMapLinkEmbed;","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { useUpdateContext } from '../../contexts/UpdateContextFooter.js';\nimport { useNotificationContext, types } from '../../contexts/NotificationContext';\n\nimport * as stadiumService from '../../services/stadiumService.js';\nimport countryList from '../../helpers/countryList.js'\nimport getGoogleMapLinkEmbed from '../../helpers/getGoogleMapEmbedLink.js';\nimport errorsCheck from '../../helpers/errorsCheck.js';\nimport '../Edit/Edit.css';\n\nconst Edit = ({\n    match\n}) => {\n\n    const { user } = useAuthContext();\n    const { addUpdateStadium } = useUpdateContext();\n    const { addNotification } = useNotificationContext();\n    const history = useHistory();\n\n    const [stadium, setStadium] = useState({});\n    let stadiumId = match.params.stadiumId;\n    const [errors, setErrors] = useState({\n        name: false,\n        country: false,\n        city: false,\n        capacity: false,\n        clubs: false,\n        address: false,\n        imageUrl: false,\n        description: false\n    });\n\n    let [serverResponse, setServerResponse] = useState('');\n\n    useEffect(() => {\n        stadiumService.getOne(stadiumId)\n            .then(stadiumResult => {\n                setStadium(stadiumResult);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [stadiumId]);\n\n    const onStadiumEdit = (e) => {\n\n        e.preventDefault();\n\n        let formData = new FormData(e.currentTarget);\n\n        let name = formData.get('name').trim().toLowerCase();\n        let country = formData.get('country').trim();\n        let city = formData.get('city').trim();\n        let capacity = formData.get('capacity').trim();\n        let clubs = formData.get('clubs').trim();\n        let addressRaw = formData.get('address').trim();\n        let address = getGoogleMapLinkEmbed(addressRaw).toLowerCase();\n\n        let imageUrl = formData.get('imageUrl').trim();\n        let description = formData.get('description').trim();\n\n        let newStadium = {\n            name,\n            country,\n            city,\n            capacity,\n            clubs,\n            address,\n            imageUrl,\n            description,\n        }\n\n        if (stadium.country.toLowerCase() == 'please select country') {\n            addNotification('Please check if all fields are filled in properly', types.error);\n            return setErrors(state => ({ ...state, country: 'Please select country from the list' }));\n        } else {\n            setErrors(state => ({ ...state, country: false }));\n        }\n\n        if (errorsCheck(errors, false)) {\n            addNotification('Please check if all fields are filled in properly', types.error);\n            return;\n        }\n\n        stadiumService.edit(stadiumId, newStadium, user.accessToken)\n            .then(result => {\n                console.log('edit success');\n                addUpdateStadium(result);\n                addNotification('Stadium updated successfully', types.success);\n                history.push(`/stadiums/details/${stadiumId}`);\n            })\n            .catch(err => {\n                console.log(err);\n                setServerResponse(err.message);\n                addNotification(`An error occurred - ${err.message}`, types.error);\n            })\n    }\n\n    const validateName = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^[A-Za-z0-9 ]{3,30}$/)) {\n            setErrors(state => ({ ...state, name: 'Stadium name should be between 3 and 30 characters (English letters, Numbers and Spaces allowed)' }));\n        } else {\n            setErrors(state => ({ ...state, name: false }));\n        }\n    };\n\n    const validateCity = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^[A-Za-z ]{3,15}$/)) {\n            setErrors(state => ({ ...state, city: 'City should be between 3 and 15 characters (English letters and Spaces allowed)' }));\n        } else {\n            setErrors(state => ({ ...state, city: false }));\n        }\n    };\n\n    const validateCapacity = (e) => {\n        let currentName = e.target.value;\n\n        if (currentName < 0) {\n            setErrors(state => ({ ...state, capacity: 'Stadium capacity cannot be a negative number' }));\n        } else {\n            setErrors(state => ({ ...state, capacity: false }));\n        }\n    };\n\n    const validateClubs = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^[A-Za-z0-9- ]{3,100}$/)) {\n            setErrors(state => ({ ...state, clubs: 'Clubs should be between 3 and 100 characters (English letters, Numbers, Hyphens (-) and Spaces allowed)' }));\n        } else {\n            setErrors(state => ({ ...state, clubs: false }));\n        }\n    };\n\n    const validateAddress = (e, address) => {\n        let currentName = e.target.value;\n        let result = getGoogleMapLinkEmbed(currentName);\n\n        if (result !== '') {\n            address = result;\n            setErrors(state => ({ ...state, address: false }));\n        } else {\n            setErrors(state => ({ ...state, address: 'Please add Google Map Embed url link' }));\n        }\n    };\n\n    const validateImageUrl = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^https?:\\/{2}/)) {\n            setErrors(state => ({ ...state, imageUrl: 'Please add Image url' }));\n        } else {\n            setErrors(state => ({ ...state, imageUrl: false }));\n        }\n    };\n\n    const validateDescription = (e) => {\n        let currentName = e.target.value;\n\n        if (currentName.length > 1500) {\n            setErrors(state => ({ ...state, description: 'Stadium description should be max 1500 characters' }));\n        } else {\n            setErrors(state => ({ ...state, description: false }));\n        }\n    };\n\n    return (\n        <section className=\"stadium-form-wrapper\">\n            <article className=\"stadium-form-header\">\n                <h3>Edit</h3>\n            </article>\n            <form className=\"stadium-form-content\" onSubmit={onStadiumEdit} method=\"POST\">\n                <article className=\"form-group\">\n                    <input type=\"text\" name=\"name\" id=\"name\" className=\"stadium-form-input\" placeholder=\"Stadium name *\" defaultValue={stadium.name} onChange={validateName} required />\n                    {errors.name\n                        ? <p className=\"error\">{errors.name}</p>\n                        : null\n                    }\n                </article>\n                <article className=\"form-group\">\n                    <select id=\"type\" name=\"country\" className=\"stadium-form-input\" value={stadium.country} onChange={(e) => setStadium(s => ({ ...s, country: e.target.value }))} >\n                        {countryList.map(x => <option key={x} value={x}>{x}</option>)}\n                    </select>\n                    {errors.country\n                        ? <p className=\"error\">{errors.country}</p>\n                        : null\n                    }\n                </article>\n                <article className=\"form-group\">\n                    <input type=\"text\" name=\"city\" id=\"city\" className=\"stadium-form-input\" defaultValue={stadium.city} placeholder=\"City *\" onChange={validateCity} required />\n                    {errors.city\n                        ? <p className=\"error\">{errors.city}</p>\n                        : null\n                    }\n                </article>\n                <article className=\"form-group\">\n                    <input type=\"number\" name=\"capacity\" id=\"capacity\" className=\"stadium-form-input\" defaultValue={stadium.capacity} placeholder=\"Stadium capacity *\" onChange={validateCapacity} required />\n                    {errors.capacity\n                        ? <p className=\"error\">{errors.capacity}</p>\n                        : null\n                    }\n                </article>\n\n                <article className=\"form-group\">\n                    <input type=\"text\" name=\"clubs\" id=\"clubs\" className=\"stadium-form-input\" defaultValue={stadium.clubs} placeholder=\"Clubs *\" onChange={validateClubs} required />\n                    {errors.clubs\n                        ? <p className=\"error\">{errors.clubs}</p>\n                        : null\n                    }\n                </article>\n\n                <article className=\"form-group\">\n                    <input type=\"text\" name=\"address\" id=\"address\" className=\"stadium-form-input\" defaultValue={stadium.address} placeholder=\"Google Map Address (embed) *\" onChange={validateAddress} required />\n                    {errors.address\n                        ? <p className=\"error\">{errors.address}</p>\n                        : null\n                    }\n                </article>\n\n                <article className=\"form-group\">\n                    <input type=\"URL\" name=\"imageUrl\" id=\"imageUrl\" className=\"stadium-form-input\" defaultValue={stadium.imageUrl} placeholder=\"Image URL *\" onChange={validateImageUrl} required />\n                    {errors.imageUrl\n                        ? <p className=\"error\">{errors.imageUrl}</p>\n                        : null\n                    }\n                </article>\n\n                <article className=\"form-group\">\n                    <article className=\"form-group\">\n                        <textarea name=\"description\" placeholder=\"Description*\" className=\"stadium-form-input\" defaultValue={stadium.description} onChange={validateDescription} rows={7} required />\n                    </article>\n                    {errors.description\n                        ? <p className=\"error\">{errors.description}</p>\n                        : null\n                    }\n                </article>\n\n                <article className=\"form-group\">\n                    <button className=\"btn-submit\"  type=\"submit\">Edit</button>\n                </article>\n                {serverResponse !== ''\n                    ? <article className=\"error\">Operation cannot be executed - {serverResponse}. Not authorized to edit stadium.</article>\n                    : null\n                }\n            </form>\n        </section>\n    );\n}\n\nexport default Edit;\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { useUpdateContext } from '../../contexts/UpdateContextFooter.js';\nimport { useNotificationContext, types } from '../../contexts/NotificationContext';\n\nimport * as stadiumService from '../../services/stadiumService.js';\nimport getGoogleMapLinkEmbed from '../../helpers/getGoogleMapEmbedLink.js';\nimport errorsCheck from '../../helpers/errorsCheck.js';\nimport countryList from '../../helpers/countryList.js'\nimport '../Create/Create.css';\n\nconst Create = () => {\n\n    const { user } = useAuthContext();\n    const { addUpdateStadium } = useUpdateContext();\n    const { addNotification } = useNotificationContext();\n    const history = useHistory();\n\n    const [errors, setErrors] = useState({\n        name: false,\n        country: true,\n        city: false,\n        capacity: false,\n        clubs: false,\n        address: false,\n        imageUrl: false,\n        description: false\n    });\n\n    const onStadiumCreate = (e) => {\n\n        e.preventDefault();\n\n        let formData = new FormData(e.currentTarget);\n\n        let name = formData.get('name').trim().toLowerCase();\n        let country = formData.get('country').trim();\n        let city = formData.get('city').trim();\n        let capacity = formData.get('capacity').trim();\n        let clubs = formData.get('clubs').trim();\n        let addressRaw = formData.get('address').trim();\n        let address = getGoogleMapLinkEmbed(addressRaw).toLowerCase();\n\n        let imageUrl = formData.get('imageUrl').trim();\n        let description = formData.get('description').trim();\n\n        let newStadium = {\n            name,\n            country,\n            city,\n            capacity,\n            clubs,\n            address,\n            imageUrl,\n            description,\n        }\n\n        if (errorsCheck(errors, false)) {\n            addNotification('Please check if all fields are filled in properly', types.error);\n            return;\n        }\n\n        stadiumService.create(newStadium, user.accessToken)\n            .then(result => {\n                console.log('creation success');\n                addUpdateStadium(result);\n                addNotification('Stadium created successfully', types.success);\n                history.push('/home/all');\n            })\n            .catch(err => {\n                console.log(err);\n                addNotification(`An error occurred - ${err.message}`, types.error);\n            })\n    }\n\n    const validateName = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^[A-Za-z0-9 ]{3,30}$/)) {\n            setErrors(state => ({ ...state, name: 'Stadium name should be between 3 and 30 characters (English letters, Numbers and Spaces allowed)' }));\n        } else {\n            setErrors(state => ({ ...state, name: false }));\n        }\n    };\n\n    const validateCountry = (e) => {\n        let currentName = e.target.value;\n\n        if (currentName === 'Please select country') {\n            setErrors(state => ({ ...state, country: 'Please select country from the list' }));\n        } else {\n            setErrors(state => ({ ...state, country: false }));\n        }\n    };\n\n    const validateCity = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^[A-Za-z ]{3,15}$/)) {\n            setErrors(state => ({ ...state, city: 'City should be between 3 and 15 characters (English letters and Spaces allowed)' }));\n        } else {\n            setErrors(state => ({ ...state, city: false }));\n        }\n    };\n\n    const validateCapacity = (e) => {\n        let currentName = e.target.value;\n\n        if (currentName < 0) {\n            setErrors(state => ({ ...state, capacity: 'Stadium capacity cannot be a negative number' }));\n        } else {\n            setErrors(state => ({ ...state, capacity: false }));\n        }\n    };\n\n    const validateClubs = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^[A-Za-z0-9- ]{3,100}$/)) {\n            setErrors(state => ({ ...state, clubs: 'Clubs should be between 3 and 100 characters (English letters, Numbers, Hyphens (-) and Spaces allowed)' }));\n        } else {\n            setErrors(state => ({ ...state, clubs: false }));\n        }\n    };\n\n    const validateAddress = (e, address) => {\n        let currentName = e.target.value;\n        let result = getGoogleMapLinkEmbed(currentName);\n\n        if (result !== '') {\n            address = result;\n            setErrors(state => ({ ...state, address: false }));\n        } else {\n            setErrors(state => ({ ...state, address: 'Please add Google Map Embed url link' }));\n        }\n    };\n\n    const validateImageUrl = (e) => {\n        let currentName = e.target.value;\n\n        if (!currentName.match(/^https?:\\/{2}/)) {\n            setErrors(state => ({ ...state, imageUrl: 'Please add Image url' }));\n        } else {\n            setErrors(state => ({ ...state, imageUrl: false }));\n        }\n    };\n\n    const validateDescription = (e) => {\n        let currentName = e.target.value;\n\n        if (currentName.length > 1500) {\n            setErrors(state => ({ ...state, description: 'Stadium description should be max 1500 characters' }));\n        } else {\n            setErrors(state => ({ ...state, description: false }));\n        }\n    };\n\n    return (\n        <section className=\"stadium-form-wrapper\">\n            <article className=\"stadium-form-header\">\n                <h3>Create</h3>\n            </article>\n            <form className=\"stadium-form-content\" onSubmit={onStadiumCreate} method=\"POST\">\n\n                <article className=\"form-group\">\n                    <input type=\"text\" name=\"name\" id=\"name\" className=\"stadium-form-input\" placeholder=\"Stadium name *\" onChange={validateName} required />\n                    {errors.name\n                        ? <p className=\"error\">{errors.name}</p>\n                        : null\n                    }\n                </article>\n                <article className=\"form-group\">\n                    <select id=\"type\" name=\"country\" className=\"stadium-form-input\" onChange={validateCountry} >\n                        {countryList.map(x => <option key={x} value={x}>{x}</option>)}\n                    </select>\n                    {errors.country\n                        ? <p className=\"error\">{errors.country}</p>\n                        : null\n                    }\n                </article>\n                <article className=\"form-group\">\n                    <input type=\"text\" name=\"city\" id=\"city\" className=\"stadium-form-input\" placeholder=\"City *\" onChange={validateCity} required />\n                    {errors.city\n                        ? <p className=\"error\">{errors.city}</p>\n                        : null\n                    }\n                </article>\n                <article className=\"form-group\">\n                    <input type=\"number\" name=\"capacity\" id=\"capacity\" className=\"stadium-form-input\" placeholder=\"Stadium capacity *\" onChange={validateCapacity} required />\n                    {errors.capacity\n                        ? <p className=\"error\">{errors.capacity}</p>\n                        : null\n                    }\n                </article>\n\n                <article className=\"form-group\">\n                    <input type=\"text\" name=\"clubs\" id=\"clubs\" className=\"stadium-form-input\" placeholder=\"Clubs *\" onChange={validateClubs} required />\n                    {errors.clubs\n                        ? <p className=\"error\">{errors.clubs}</p>\n                        : null\n                    }\n                </article>\n\n                <article className=\"form-group\">\n                    <input type=\"text\" name=\"address\" id=\"address\" className=\"stadium-form-input\" placeholder=\"Google Map Address (embed) *\" onChange={validateAddress} required />\n                    {errors.address\n                        ? <p className=\"error\">{errors.address}</p>\n                        : null\n                    }\n                </article>\n\n                <article className=\"form-group\">\n                    <input type=\"URL\" name=\"imageUrl\" id=\"imageUrl\" className=\"stadium-form-input\" placeholder=\"Image URL *\" onChange={validateImageUrl} required />\n                    {errors.imageUrl\n                        ? <p className=\"error\">{errors.imageUrl}</p>\n                        : null\n                    }\n                </article>\n\n                <article className=\"form-group\">\n                    <article className=\"form-group\">\n                        <textarea name=\"description\" placeholder=\"Description *\" className=\"stadium-form-input\" onChange={validateDescription} rows={7} required />\n                    </article>\n                    {errors.description\n                        ? <p className=\"error\">{errors.description}</p>\n                        : null\n                    }\n                </article>\n                <article className=\"form-group\">\n                    <button className=\"btn-submit\" type=\"submit\">Create</button>\n                </article>\n            </form>\n        </section>\n    );\n}\n\nexport default Create;\n","import { Link } from 'react-router-dom';\nimport '../StadiumCardLatestFooter/StadiumCardLatestFooter.css'\n\nconst StadiumCardLatestFooter = ({\n    stadiums\n}) => {\n\n    return (\n        <section className=\"footer-stadium-card\">\n            <article className=\"footer-stadium-card-image-container\">\n                <Link to={`/stadiums/details/${stadiums._id}`}>\n                    <img src={stadiums.imageUrl} alt={stadiums.name} />\n                </Link>\n            </article>\n            <article className=\"footer-stadium-card-info-container\">\n                <h4><Link to={`/stadiums/details/${stadiums._id}`}>{stadiums.name}</Link></h4>\n                <span>Capacity: {stadiums.capacity}</span>\n            </article>\n        </section>\n    );\n}\n\nexport default StadiumCardLatestFooter;","import { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport * as stadiumService from '../../../services/stadiumService.js';\nimport '../CommentsLatestFooter/CommentsLatestFooter.css';\n\nconst CommentsLatestFooter = ({\n    latestComments,\n}) => {\n\n    const [stadium, setStadium] = useState({});\n    useEffect(() => {\n        stadiumService.getOne(latestComments.stadiumId)\n            .then(stadiumResult => {\n                setStadium(stadiumResult);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [latestComments.stadiumId]);\n\n    return (\n        <section className=\"footer-comment-card\">\n            <span className=\"footer-comment-card-time\"><time >DATE: {new Date(latestComments._createdOn).toString().slice(0, 21)}</time></span>\n            {stadium.name !== undefined\n                ? <h3><Link to={`/stadiums/details/${stadium._id}`}> STADIUM: {stadium?.name} </Link></h3>\n                : <h3>Deleted Stadium</h3>\n            }\n            <h4> COMMENT: {latestComments?.message.slice(0, 100)}... </h4>\n            {stadium.name !== undefined\n                ? <h3><Link to={`/stadiums/details/${stadium._id}`}> Read More & Comment </Link></h3>\n                : null\n            }\n        </section>\n    );\n}\n\nexport default CommentsLatestFooter;\n","import { useEffect, useState } from 'react';\n\nimport { useUpdateContext } from '../../contexts/UpdateContextFooter.js';\n\nimport StadiumCardLatestFooter from '../StadiumCards/StadiumCardLatestFooter/StadiumCardLatestFooter.js';\nimport CommentsLatestFooter from '../CommentCards/CommentsLatestFooter/CommentsLatestFooter.js';\nimport * as stadiumService from '../../services/stadiumService.js';\nimport \"../Footer/Footer.css\"\n\nconst Footer = () => {\n\n    const { updateStadium, updateComment } = useUpdateContext();\n\n    const [stadiums, setStadiums] = useState([]);\n    useEffect(() => {\n        stadiumService.getLatestStadiums()\n            .then(result => {\n                setStadiums(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [updateStadium]);\n\n    const [latestComments, setLatestComments] = useState([]);\n    useEffect(() => {\n        stadiumService.getLatestComments()\n            .then(result => {\n                // console.log(result)\n                setLatestComments(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [updateComment]);\n\n\n    return (\n        <>\n            <footer className=\"footer-wrapper\">\n\n                <section className=\"footer-latest-comments\">\n                    <article>\n                        <h3 className=\"footer-heading\">Latest Comments</h3>\n                    </article>\n                    {latestComments.length > 0\n                        ? latestComments.slice(0, 3).map(x => <CommentsLatestFooter key={x._id} latestComments={x} />)\n                        : (<article>\n                            <article className=\"\">\n                                <p>No comments added yet</p>\n                            </article>\n                        </article>)\n                    }\n                </section>\n\n                <section className=\"footer-latest-stadiums\">\n                    <article>\n                        <h3 className=\"footer-heading\">Latest Stadiums</h3>\n                    </article>\n                    {stadiums.length > 0\n                        ? stadiums.slice(0, 3).map(x => <StadiumCardLatestFooter key={x._id} stadiums={x} />)\n                        : (<>\n                            <article>\n                                <img src=\"images/no-latest.jpg\" alt=\"img\" />\n                            </article>\n                            <article>\n                                <h4> No stadiums added yet </h4>\n                            </article>\n                        </>)\n                    }\n                </section>\n\n                <section className=\"footer-about\">\n                    <article >\n                        <h3 className=\"footer-heading\">World Stadia</h3>\n                    </article>\n                    <ul className=\"footer-list-items\">\n                        <li>\n                            <a href=\"mailto:milenskibg88@gmail.com\"><i className=\"far fa-envelope\"></i> milenskibg88@gmail.com</a>\n                        </li>\n                        <li>\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/in/milenhristovbg/\"> <i className=\"fab fa-linkedin\"></i>Milen Hristov</a>\n                        </li>\n                    </ul>\n                </section>\n\n            </footer>\n            <p className=\"footer-outro\">  World Stadia - React Application 2021 / Milen Hristov</p>\n        </>\n    );\n}\n\nexport default Footer;\n","import { Link } from 'react-router-dom';\n\nimport '../StadiumCardHome/StadiumCardHome.css';\n\nconst StadiumCardHome = ({\n    stadiums\n}) => {\n\n    return (\n        <article className=\"stadium\" >\n            <h3 className=\"stadium-name\">{stadiums.name}</h3>\n            <Link to={`/stadiums/details/${stadiums._id}`}><img className=\"stadium-image\" src={stadiums.imageUrl} alt=\"img\" /></Link>\n            {/* <Link className=\"tg-theme-tag bottom-left\" data-rel=\"prettyPhoto[iframe]\" to={`/stadiums/details/${stadiums._id}`}><i className=\"fa fa-play\" />Details</Link> */}\n        </article>\n    );\n}\n\nexport default StadiumCardHome;\n","import { NavLink } from 'react-router-dom';\n\nconst FilterNavigation = () => {\n\n    return (\n        <section className=\"filter\">\n            <ul className=\"filter-list\">\n                <li><NavLink to=\"/home/all\" >All</NavLink ></li>\n                <li><NavLink to=\"/home/liked\" > With Likes</NavLink ></li>\n                <li><NavLink to=\"/home/commented\" > With Comments</NavLink ></li>\n                <li><NavLink to=\"/home/capacity\" >By Capacity</NavLink ></li>\n                <li><NavLink to=\"/home/alphabetical\" >Alphabetical Order</NavLink ></li>\n                <li><NavLink to=\"/home/by-country\" >By Country</NavLink ></li>\n            </ul>\n        </section>\n    );\n}\n\nexport default FilterNavigation;\n","import { useEffect, useState } from 'react';\n\nimport { useNotificationContext, types } from '../../contexts/NotificationContext';\nimport { useAuthContext } from '../../contexts/AuthContext.js';\n\nimport StadiumCardHome from '../StadiumCards/StadiumCardHome/StadiumCardHome.js'\nimport FilterNavigation from './Filters/FilterNavigation/FilterNavigation.js';\nimport * as stadiumService from '../../services/stadiumService.js';\nimport * as authService from '../../services/authService.js';\nimport '../Home/Home.css';\n\nconst Home = () => {\n\n    const [stadiums, setStadiums] = useState([]);\n    const { addNotification } = useNotificationContext();\n\n    const { user } = useAuthContext();\n\n    const [userInfo, setUserInfo] = useState({});\n\n    useEffect(() => {\n        authService.getUserInfo(user._id)\n            .then(userInfo => {\n                setUserInfo(userInfo);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [user._id]);\n\n    useEffect(() => {\n        if (user.email !=='' && (userInfo === undefined)) {\n            authService.createUserData(user.accessToken, user.email)\n                .then(res => {\n                    // console.log(res);\n                })\n        }\n    }, [user, userInfo]);\n\n    useEffect(() => {\n        stadiumService.getAll()\n            .then(result => {\n                setStadiums(result);\n                // addNotification('Stadiums loaded successfullly', types.success);\n            })\n            .catch(err => {\n                console.log(err);\n                addNotification('No response from server', types.error);\n            })\n\n        return () => {\n            setStadiums([]);\n        };\n    }, [addNotification]);\n\n    const onChangeSearch = (e) => {\n        let formData = new FormData(e.currentTarget);\n\n        let search = formData.get('search').trim();\n\n        let filterStadiums = stadiums.filter((x => x.name.includes(search)));\n\n        if (search == '') {\n            stadiumService.getAll()\n                .then(result => {\n                    setStadiums(result);\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        } else {\n            setStadiums(filterStadiums);\n        }\n    }\n\n    return (\n        <section className=\"container\">\n            <form className=\"form\" onChange={onChangeSearch}>\n                <article className=\"form-item\">\n                    <input type=\"text\" name=\"search\" id=\"search\" className=\"search-input\" placeholder=\"Search by team...\" required />\n                </article>\n            </form>\n            <section className=\"list-items-section\">\n                <FilterNavigation />\n                <article>\n                    <h4 className=\"list-items-results\">Results ({stadiums.length})</h4>\n                </article>\n                <section className=\"list-items\">\n                    {stadiums.length > 0\n                        ? stadiums.map(x => <StadiumCardHome key={x._id} stadiums={x} />)\n                        : <h3 className=\"list-items-results\">No results found</h3>\n                    }\n                </section>\n            </section>\n        </section>\n    );\n}\n\nexport default Home;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuthContext } from '../../contexts/AuthContext.js';\nimport { useNotificationContext, types } from '../../contexts/NotificationContext';\n\nimport * as authService from '../../services/authService.js';\n\nconst Logout = () => {\n    const history = useHistory();\n    const { user, logout } = useAuthContext();\n    const { addNotification } = useNotificationContext();\n    \n    useEffect(() => {\n        authService.logout(user.accessToken)\n            .then(() => {\n                logout();\n                addNotification('You logged out successfully. See you soon!', types.success);\n                // history.push('/bye');\n                history.push('/');\n            })\n            .catch(err => {\n                console.log(err);\n                addNotification(`An error occurred - ${err.message}`, types.err);\n                history.push('/NotFound');\n            })\n    }, [user.accessToken, history, logout, addNotification])\n\n    return null;\n};\n\nexport default Logout;","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useAuthContext } from '../../contexts/AuthContext.js';\n\nimport StadiumCardHome from '../StadiumCards/StadiumCardHome/StadiumCardHome.js'\nimport * as stadiumService from '../../services/stadiumService.js';\nimport '../MyStadiums/MyStadiums.css';\n\nconst MyStadiums = () => {\n\n    const { user } = useAuthContext();\n\n    const [stadiums, setStadiums] = useState([]);\n\n    useEffect(() => {\n        stadiumService.getMyStadiums(user._id)\n            .then(result => {\n                setStadiums(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [user._id]);\n\n    return (\n        <section className=\"container\">\n            <ul className=\"filter-list\">\n                {stadiums\n                    ? <li><Link className=\"active\">All ({stadiums?.length})</Link></li>\n                    : <li><Link className=\"active\">All (0)</Link></li>\n                }\n            </ul>\n            <section className=\"list-items\">\n                {stadiums?.length > 0\n                    ? stadiums.map(x => <StadiumCardHome key={x._id} stadiums={x} />)\n                    : <h3 className=\"list-items-results\">No stadiums added yet. Add your first one now - <Link to=\"/stadiums/create\">  <span>here</span></Link></h3>\n                }\n            </section>\n        </section>\n    );\n}\n\nexport default MyStadiums;","import { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport * as stadiumService from '../../../services/stadiumService.js';\nimport '../CommentsMyProfileCard/CommentsMyProfileCard.css';\n\nconst CommentCardMyProfile = ({\n    myStadiumComments,\n}) => {\n\n    const [stadium, setStadium] = useState({});\n    useEffect(() => {\n        stadiumService.getOne(myStadiumComments.stadiumId)\n            .then(stadiumResult => {\n                setStadium(stadiumResult);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [myStadiumComments.stadiumId]);\n\n    return (\n            <article className=\"my-profile-comment-card\">\n                <article className=\"my-profile-comment-container\">\n                    <span className=\"my-profile-comment-date\"><time >{new Date(myStadiumComments._createdOn).toString()}</time></span>\n                    <article className=\"my-profile-comment-user\">\n                        {stadium.name !== undefined\n                            ? <Link to={`/stadiums/details/${stadium?._id}`}><h3>{stadium?.name}</h3></Link>\n                            : <h3>Deleted stadium</h3>\n                        }\n                    </article>\n                    <article className=\"my-profile-comment-description\">\n                        <p>{myStadiumComments?.message}</p>\n                    </article>\n                </article>\n            </article>\n    );\n}\n\nexport default CommentCardMyProfile;\n","import { Link } from 'react-router-dom';\n\nimport './StadiumCardMyProfile.css';\n\nconst StadiumCardMyProfile = ({\n    stadiums\n}) => {\n\n    return (\n        <article className=\"stadium\" >\n            <h3 className=\"stadium-name\">{stadiums.name}</h3>\n            <Link to={`/stadiums/details/${stadiums._id}`}>  <img className=\"stadium-image\" src={stadiums.imageUrl} alt={stadiums.name} /></Link>\n        </article>\n    );\n}\n\nexport default StadiumCardMyProfile;\n","import { useEffect, useState } from 'react';\n\nimport { useAuthContext } from '../../contexts/AuthContext.js';\nimport { useNotificationContext, types } from '../../contexts/NotificationContext';\n\nimport CommentsMyProfileCard from '../CommentCards/CommentsMyProfileCard/CommentsMyProfileCard.js';\nimport StadiumCardMyProfile from '../StadiumCards/StadiumCardMyProfile/StadiumCardMyProfile.js';\nimport * as authService from '../../services/authService.js';\nimport * as stadiumService from '../../services/stadiumService.js';\n// import axios from 'axios';\n// import baseUrlImageServer from '../../config/baseUrlImageServer.js'\nimport '../MyProfile/MyProfile.css';\n\nconst MyProfile = () => {\n    const { user } = useAuthContext();\n    const { addNotification } = useNotificationContext();\n    let [usernameError, setUsernameError] = useState({ type: 'no-error' });\n    let [aboutError, setAboutError] = useState({ type: 'no-error' });\n    // let [avatarError, setAvatarError] = useState({ type: 'no-error' });\n\n    const [stadiums, setStadiums] = useState([]);\n    useEffect(() => {\n        stadiumService.getMyStadiums(user._id)\n            .then(result => {\n                setStadiums(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [user._id]);\n\n    const [userInfo, setUserInfo] = useState({});\n    useEffect(() => {\n        authService.getUserInfo(user._id)\n            .then(userInfo => {\n                setUserInfo(userInfo);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [user._id]);\n\n    const onClickUpdateUsername = (e) => {\n        e.preventDefault();\n        let formData = new FormData(e.currentTarget);\n        let username = formData.get('username');\n\n        if (usernameError.type !== 'no-error') {\n            return;\n        }\n\n        authService.updateUsername(userInfo, username, user.accessToken)\n            .then(result => {\n                setUserInfo(result);\n                addNotification('Username updated successfully', types.success);\n            })\n            .catch(err => {\n                console.log(err);\n                addNotification(`An error occurred - ${err.message}`, types.error);\n            })\n    }\n\n    const validateName = (e) => {\n        let userNameInput = e.currentTarget.value;\n        if (!userNameInput.match(/^[A-Za-z0-9]{3,15}$/)) {\n            setUsernameError({ type: 'Username should be between 3 and 15 characters (English letters and Numbers allowed, No spaces)' });\n        } else {\n            setUsernameError({ type: 'no-error' })\n        }\n    }\n\n    const onClickUpdateAboutMe = (e) => {\n        e.preventDefault();\n        let formData = new FormData(e.currentTarget);\n        let aboutMe = formData.get('aboutMe');\n\n        if (aboutError.type !== 'no-error') {\n            return;\n        }\n\n        authService.updateAboutMe(userInfo, aboutMe, user.accessToken)\n            .then(result => {\n                console.log(result)\n                setUserInfo(result);\n                addNotification('About Me updated successfully', types.success);\n            })\n            .catch(err => {\n                console.log(err);\n                addNotification(`An error occurred - ${err.message}`, types.error);\n            })\n    }\n\n    const validateAboutMe = (e) => {\n        let aboutMeInput = e.currentTarget.value;\n        if (aboutMeInput.length == 0) {\n            setAboutError({ type: 'Please add info about yourself' });\n        } else {\n            setAboutError({ type: 'no-error' })\n        }\n    }\n\n    const [myStadiumComments, setStadiumComments] = useState([]);\n    useEffect(() => {\n        authService.getUserStadiumComments(user._id)\n            .then(stadiumCommentsResult => {\n                setStadiumComments(stadiumCommentsResult);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [user._id]);\n\n\n    // let [profileImg, setProfileImg] = useState('');\n\n    // const onFileChange = (e) => {\n    //     setProfileImg(e.target.files[0]);\n    // }\n\n\n    // const onClickUpdateAvatar = (e) => {\n    //     e.preventDefault();\n        // v1\n        // const formData = new FormData();\n        // formData.append('profileImg', profileImg);\n        // v2\n        // const formData = new FormData();\n        // formData.append('file', profileImg);\n\n        // v1\n        // axios.post(baseUrlImageServer, formData, {\n        // v2\n        // axios.post(`${baseUrlImageServer}/upload`, formData, {\n        // }).then(res => {\n            // v1\n            // let avatar = res.data.userCreated.profileImg;\n            // v2\n    //         let avatar = `${baseUrlImageServer}/files/${res.data.file.filename}`;\n\n    //         authService.updateAvatar(userInfo, avatar, user.accessToken)\n    //             .then(result => {\n    //                 console.log(result)\n    //                 setUserInfo(result);\n    //                 addNotification('Avatar updated successfully', types.success);\n    //             })\n    //             .catch(err => {\n    //                 console.log(err);\n    //                 addNotification(`An error occurred - ${err.message}`, types.error);\n    //             })\n    //     }).catch(err => {\n    //         console.log(err);\n    //         addNotification(`An error occurred - ${err.message}`, types.error);\n    //     })\n    // }\n\n    return (\n        <>\n            <section className=\"my-profile-wrapper\">\n                <section className=\"my-profile-details-main\">\n                    <section className=\"my-profile-avatar\">\n                        <img src={userInfo?.avatar} alt=\"avatar\" />\n                        {/* <li>Upload Avatar</li> */}\n                        {/* <article>\n                            <form onSubmit={onClickUpdateAvatar}>\n                                <input type=\"file\" onChange={onFileChange} accept=\"image/png, image/gif, image/jpeg\" />\n                                <button type=\"submit\">Update Avatar</button>\n                            </form>\n                        </article> */}\n                    </section>\n                    <section className=\"my-profile-details-all\">\n                        <article className=\"my-profile-details-top\">\n                            {userInfo?.username !== \"Please add your nickname\"\n                                ? <span>{userInfo?.username}</span>\n                                : null\n                            }\n                            <h3>{user.email}</h3>\n                        </article>\n                        <article className=\"my-profile-details-username\">\n                            <h3>Username: {userInfo?.username}</h3>\n                            <form className=\"my-profile-form\" onSubmit={onClickUpdateUsername} method=\"POST\">\n                                <article className=\"my-profile-form-group\">\n                                    <input type=\"username\" name=\"username\" className=\"my-profile-form-input\" placeholder=\"username\" required onBlur={validateName} />\n                                    {usernameError.type !== 'no-error'\n                                        ? <p className=\"error\">{usernameError.type}</p>\n                                        : null\n                                    }\n                                </article>\n                                <article className=\"buttons\">\n                                    <button className=\"btn-save\" type=\"submit\">Update Username</button>\n                                </article>\n                            </form>\n                        </article>\n                        <article className=\"my-profile-details-about\">\n                            <h3>About Me</h3>\n                            <p>User Info:  {userInfo?.aboutMe}</p>\n                            <form className=\"my-profile-form\" onSubmit={onClickUpdateAboutMe} method=\"POST\">\n                                <article className=\"my-profile-form-group\">\n                                    <textarea type=\"username\" name=\"aboutMe\" className=\"my-profile-form-textarea\" placeholder=\"about me\" onBlur={validateAboutMe} rows={5} required />\n                                    {aboutError.type !== 'no-error'\n                                        ? <p className=\"error\">{aboutError.type}</p>\n                                        : null\n                                    }\n                                </article>\n                                <article className=\"buttons\">\n                                    <button className=\"btn-save\" type=\"submit\">Update About Me</button>\n                                </article>\n                            </form>\n                        </article>\n                    </section>\n                </section>\n            </section>\n\n            <section className=\"my-profile-created-stadiums\">\n                <section className=\"list-items-section\">\n                    {stadiums\n                        ? <h2 className=\"list-items-results\">Created Stadiums ({stadiums?.length})</h2>\n                        : <h2 className=\"list-items-results\">Created Stadiums (0)</h2>\n                    }\n                    <section className=\"list-items\">\n                        {stadiums?.length > 0\n                            ? stadiums.map(x => <StadiumCardMyProfile key={x._id} stadiums={x} />)\n                            : <h3 className=\"list-items-results\">No stadiums added yet</h3>\n                        }\n                    </section>\n                </section>\n            </section>\n\n            <section className=\"my-profile-comments\">\n            <section className=\"my-profile-list-items-section\">\n                <article className=\"my-profile-stadium-comments-all-heading\">\n                    {myStadiumComments !== undefined\n                        ? <h2 className=\"list-items-results\"> Latest Comments ({myStadiumComments?.length})</h2>\n                        : <h2 className=\"list-items-results\" >Latest Comments (0)</h2>\n                    }\n                </article>\n                <article>\n                    {myStadiumComments?.length > 0\n                        ? myStadiumComments.map(x => <CommentsMyProfileCard key={x._id} myStadiumComments={x} />)\n                        : <h2 className=\"list-items-results\">No comments yet</h2>\n                    }\n                </article>\n                </section>\n            </section>\n        </>\n    );\n}\n\nexport default MyProfile;\n","import '../NotFound/NotFound.css';\n\nconst NotFound = () => {\n\n    return (\n        <section className=\"not-found-wrapper\">\n            <article className=\"not-found-error\">\n                <h2>404</h2>\n            </article>\n            <article className=\"not-found\">\n                <h2>oops! something went wrong</h2>\n            </article>\n            <article className=\"not-found\">\n                <h2>page not found</h2>\n            </article>\n            <article className=\"not-found-description\">\n                <p>The resource you are looking for has been removed, had its name changed, or is temporarily unavailable.</p>\n            </article>\n        </section>\n\n    );\n}\n\nexport default NotFound;","import { useEffect, useState } from 'react';\n\nimport StadiumCardHome from '../../../StadiumCards/StadiumCardHome/StadiumCardHome.js';\nimport FilterNavigation from '../FilterNavigation/FilterNavigation.js';\nimport * as stadiumService from '../../../../services/stadiumService.js';\nimport '../LikedStadiums/LikedStadiums.css';\n\nconst LikedStadiums = () => {\n\n    const [stadiumsAll, setStadiumsAll] = useState([]);\n\n    useEffect(() => {\n        stadiumService.getAll()\n            .then(result => {\n                setStadiumsAll(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    const [likedStadiums, setLikedStadiums] = useState([]);\n\n    useEffect(() => {\n        stadiumService.getLikedStadiums()\n            .then(result => {\n                setLikedStadiums(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    let stadiums = stadiumsAll.filter(x => likedStadiums.includes(x._id));\n\n    return (\n        <section className=\"container\">\n            <section className=\"list-items-section\">\n                <FilterNavigation />\n                <article>\n                    <h4 className=\"list-items-results\">Results ({stadiums.length})</h4>\n                </article>\n                <section className=\"list-items\">\n                    {stadiums.length > 0\n                        ? stadiums.map(x => <StadiumCardHome key={x._id} stadiums={x} />)\n                        : <h3 className=\"list-items-results\">No stadiums with likes</h3>\n                    }\n                </section>\n            </section>\n        </section>\n    );\n}\n\nexport default LikedStadiums;\n","import { useEffect, useState } from 'react';\n\nimport StadiumCardHome from '../../../StadiumCards/StadiumCardHome/StadiumCardHome.js';\nimport FilterNavigation from '../FilterNavigation/FilterNavigation.js';\nimport * as stadiumService from '../../../../services/stadiumService.js';\nimport '../../Home.css';\n\nconst CommentedStadiums = () => {\n\n    const [stadiumsAll, setStadiumsAll] = useState([]);\n\n    useEffect(() => {\n        stadiumService.getAll()\n            .then(result => {\n                setStadiumsAll(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    const [commentedStadiums, setCommentedStadiums] = useState([]);\n\n    useEffect(() => {\n        stadiumService.getCommentedStadiums()\n            .then(result => {\n                setCommentedStadiums(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    let stadiums = stadiumsAll.filter(x => commentedStadiums.includes(x._id));\n\n    return (\n        <section className=\"container\">\n            <section className=\"list-items-section\">\n                <FilterNavigation />\n                <article>\n                    <h4 className=\"list-items-results\">Results ({stadiums.length})</h4>\n                </article>\n                <section className=\"list-items\">\n                    {stadiums.length > 0\n                        ? stadiums.map(x => <StadiumCardHome key={x._id} stadiums={x} />)\n                        : <h3 className=\"list-items-results\">No stadiums with comments</h3>\n                    }\n                </section>\n            </section>\n        </section>\n    );\n}\n\nexport default CommentedStadiums;\n","import { Link } from 'react-router-dom';\n\nimport '../StadiumCardHomeCapacity/StadiumCardHomeCapacity.css';\n\nconst StadiumCardHomeCapacity = ({\n    stadiums\n}) => {\n\n    return (\n        <article className=\"stadium\" >\n\n            <h3 className=\"stadium-name\">{stadiums.name} ({stadiums.capacity})</h3>\n            <Link to={`/stadiums/details/${stadiums._id}`}><img className=\"stadium-image\" src={stadiums.imageUrl} alt=\"img\" /></Link>\n\n            {/* <Link className=\"tg-theme-tag bottom-left\" data-rel=\"prettyPhoto[iframe]\" to={`/stadiums/details/${stadiums._id}`}><i className=\"fa fa-play\" />Details</Link> */}\n        </article >\n    );\n}\n\nexport default StadiumCardHomeCapacity;\n","import { useEffect, useState } from 'react';\n\nimport StadiumCardHomeCapacity from '../../../StadiumCards/StadiumCardHomeCapacity/StadiumCardHomeCapacity.js';\nimport FilterNavigation from '../FilterNavigation/FilterNavigation.js';\nimport * as stadiumService from '../../../../services/stadiumService.js';\nimport '../../Home.css';\n\nconst BiggestCapacity = () => {\n\n    const [stadiums, setStadiums] = useState([]);\n\n    useEffect(() => {\n        stadiumService.getAllByCapacity()\n            .then(result => {\n                setStadiums(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    return (\n        <section className=\"container\">\n            <section className=\"list-items-section\">\n                <FilterNavigation />\n                <article>\n                    <h4 className=\"list-items-results\">Results ({stadiums.length})</h4>\n                </article>\n                <section className=\"list-items\">\n                    {stadiums.length > 0\n                        ? stadiums.map(x => <StadiumCardHomeCapacity key={x._id} stadiums={x} />)\n                        : <h3 className=\"list-items-results\">No stadiums added yet</h3>\n                    }\n                </section>\n            </section>\n        </section>\n    );\n}\n\nexport default BiggestCapacity;","const sortStadiums = (obj) => {\n\n    let sortedStadiums = Object\n    .values(obj)\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n    return sortedStadiums;\n}\n\nexport default sortStadiums;","import { useEffect, useState } from 'react';\n\nimport StadiumCardHome from '../../../StadiumCards/StadiumCardHome/StadiumCardHome.js';\nimport FilterNavigation from '../FilterNavigation/FilterNavigation.js';\nimport sortStadiumsByAlphabeticalOrder from '../../../../helpers/sortStadiumsByAlphabeticalOrder.js';\nimport * as stadiumService from '../../../../services/stadiumService.js';\nimport '../../Home.css';\n\nconst AlphabeticalOrder = () => {\n\n    const [stadiums, setStadiums] = useState([]);\n\n    useEffect(() => {\n        stadiumService.getAll()\n            .then(result => {\n                let sortedResult = sortStadiumsByAlphabeticalOrder(result);\n                setStadiums(sortedResult);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    return (\n        <section className=\"container\">\n            <section className=\"list-items-section\">\n                <FilterNavigation />\n                <article>\n                    <h4 className=\"list-items-results\">Results ({stadiums.length})</h4>\n                </article>\n                <section className=\"list-items\">\n                    {stadiums.length > 0\n                        ? stadiums.map(x => <StadiumCardHome key={x._id} stadiums={x} />)\n                        : <h3 className=\"list-items-results\">No stadiums added yet</h3>\n                    }\n                </section>\n            </section>\n        </section>\n    );\n}\n\nexport default AlphabeticalOrder;","import { NavLink } from 'react-router-dom';\n\nimport '../ByCountryNavigation/ByCountryNavigation.css'\n\nconst ByCountryNavigation = (countryList) => {\n\n    let countries = countryList.value;\n\n    return (\n        <section className=\"filter\">\n            <ul className=\"filter-list\">\n                {countries.length > 0\n                    ? countries.map(x => <li key={x}><NavLink  to={`/home/by-country/${x}`}>{x}</NavLink ></li>)\n                    : <h3 className=\"list-items-results\">No stadiums added yet</h3>\n                }\n            </ul>\n        </section>\n    );\n}\n\nexport default ByCountryNavigation;\n","import { useEffect, useState } from 'react';\n\nimport FilterNavigation from '../FilterNavigation/FilterNavigation.js';\nimport ByCountryNavigation from '../ByCountry/ByCountryNavigation/ByCountryNavigation.js';\nimport * as stadiumService from '../../../../services/stadiumService.js';\nimport '../../Home.css';\n\nconst ByCountry = () => {\n\n    const [countryList, setCountryList] = useState([]);\n    useEffect(() => {\n        stadiumService.getCountryList()\n            .then(result => {\n                let sortAphabetically = result.sort((a, b) => a.localeCompare(b));\n                setCountryList(sortAphabetically);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    return (\n        <section className=\"container\">\n            <section className=\"list-items-section\">\n                <FilterNavigation />\n                <ByCountryNavigation value={countryList} />\n                {/* <article> */}\n                    {/* <h4 className=\"list-items-results\">Results ({stadiums.length})</h4> */}\n                {/* </article> */}\n                <section className=\"list-items\">\n                    {countryList.length > 0\n                        ? < h3 className=\"list-items-results\">Please select country</h3>\n                        : null\n                    }\n                </section>\n            </section>\n        </section>\n    );\n}\n\nexport default ByCountry;\n","import { useEffect, useState } from 'react';\n\nimport StadiumCardHome from '../../../../StadiumCards/StadiumCardHome/StadiumCardHome.js';\nimport FilterNavigation from '../../FilterNavigation/FilterNavigation.js';\nimport ByCountryNavigation from '../ByCountryNavigation/ByCountryNavigation.js';\nimport * as stadiumService from '../../../../../services/stadiumService.js';\nimport '../../../Home.css';\n\nconst ByCountryView = ({ match }) => {\n\n    const [countryList, setCountryList] = useState([]);\n    useEffect(() => {\n        stadiumService.getCountryList()\n            .then(result => {\n                let sortAphabetically = result.sort((a, b) => a.localeCompare(b));\n                setCountryList(sortAphabetically);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    let country = match.params.country;\n    const [stadiums, setStadiums] = useState([]);\n\n    useEffect(() => {\n        stadiumService.getCountryStadiums(country)\n            .then(result => {\n                // console.log(result)\n                setStadiums(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [country]);\n\n    return (\n        <section className=\"container\">\n            <section className=\"list-items-section\">\n                <FilterNavigation />\n                <ByCountryNavigation value={countryList} />\n                <article>\n                    <h4 className=\"list-items-results\">Results ({stadiums.length})</h4>\n                </article>\n                <section className=\"list-items\">\n                    {stadiums.length > 0\n                        ? stadiums.map(x => <StadiumCardHome key={x._id} stadiums={x} />)\n                        : <h3 className=\"list-items-results\">No stadiums added yet</h3>\n                    }\n                </section>\n            </section>\n        </section>\n    );\n}\n\nexport default ByCountryView;\n","import { Link } from 'react-router-dom';\n\nimport '../UserCard/UserCard.css';\n\nconst UserCard = ({ user }) => {\n\n    return (\n        <section className=\"user-card\">\n            <article className=\"image-container\">\n                <Link to={`/users/${user._ownerId}`}>\n                    <img src={user.avatar} alt=\"avatar\" />\n                </Link>\n            </article>\n\n            <section className=\"user-container\">\n                <article className=\"user-item\">\n                    {user.username == \"Please add your nickname\"\n                        ? null\n                        : <span className=\"user-username\">{user.username}</span>\n                    }\n                </article>\n                <article className=\"user-item\">\n                    <h3 className=\"user-email\"><Link to={`/users/${user._ownerId}`}>{user.email}</Link></h3>\n                </article>\n                <article className=\"user-item\">\n                    {user?.aboutMe\n                        ? <p>{user.aboutMe.slice(0, 100)}..</p>\n                        : null\n                    }\n                </article>\n            </section>\n        </section>\n    );\n}\n\nexport default UserCard;","import { useEffect, useState } from 'react';\n\nimport UserCard from './UserCard/UserCard.js';\nimport * as authService from '../../services/authService.js';\nimport '../Users/Users.css';\n\nconst Users = () => {\n\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        authService.getAllUsers()\n            .then(result => {\n                setUsers(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    const onChangeSearch = (e) => {\n        let formData = new FormData(e.currentTarget);\n\n        let search = formData.get('search').trim();\n\n        let filterUsers = [];\n\n        for (const userEntry in users) {\n            if (users[userEntry].email.includes(search)) {\n                filterUsers.push(users[userEntry]);\n            }\n        }\n\n        if (search == '') {\n            authService.getAllUsers()\n                .then(result => {\n                    setUsers(result);\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        } else {\n            setUsers(filterUsers);\n        }\n    }\n\n    return (\n        <section className=\"stadium-users\">\n            <section className=\"stadium-users-search\">\n                <article className=\"stadium-users-all-heading\">\n                    <h2>Users</h2>\n                </article>\n                <article className=\"stadium-users-search-description\">\n                    <p>Thank you for being part of our community.</p>\n                </article>\n                <form className=\"stadium-users-search-form\" onChange={onChangeSearch} >\n                    <article >\n                        <input type=\"text\" name=\"search\" id=\"search\" className=\"user-search-input\" placeholder=\"Search by email...\" />\n                    </article>\n                </form>\n            </section>\n            <section className=\"stadium-users-all\">\n                <article className=\"stadium-users-all-heading\">\n                    <h2>World Stadia Users</h2>\n                </article>\n                <section>\n                    <ul className=\"stadium-users-container\">\n                        {users?.length > 0\n                            ? users.map(x => <UserCard key={x._id} user={x} />)\n                            : <h3 className=\"stadium-user-result\">No users to show</h3>\n                        }\n                    </ul>\n                </section>\n            </section>\n\n        </section >\n    );\n}\n\nexport default Users;","import { useEffect, useState } from 'react';\n\nimport StadiumCardMyProfile from '../StadiumCards/StadiumCardMyProfile/StadiumCardMyProfile.js'\nimport CommentsMyProfileCard from '../CommentCards/CommentsMyProfileCard/CommentsMyProfileCard.js'\nimport * as authService from '../../services/authService.js';\nimport * as stadiumService from '../../services/stadiumService.js';\nimport '../UserDetails/UserDetails.css';\n\nconst UserDetails = ({\n    match\n}) => {\n\n    let user = match.params.userId;\n\n    const [stadiums, setStadiums] = useState([]);\n    useEffect(() => {\n        stadiumService.getMyStadiums(user)\n            .then(result => {\n                setStadiums(result);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [user]);\n\n    const [userInfo, setUserInfo] = useState({});\n    useEffect(() => {\n        authService.getUserInfo(user)\n            .then(userInfo => {\n                setUserInfo(userInfo);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [user]);\n\n    const [myStadiumComments, setStadiumComments] = useState([]);\n    useEffect(() => {\n        authService.getUserStadiumComments(user)\n            .then(stadiumCommentsResult => {\n                setStadiumComments(stadiumCommentsResult);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, [user]);\n\n    return (\n        <>\n            <section className=\"user-profile-wrapper\">\n\n                <section className=\"user-profile-details-wrapper\">\n                    <section className=\"user-profile-image-container\">\n                        <img src={userInfo?.avatar} alt=\"avatar\" />\n                    </section>\n                    <section className=\"user-profile-details-container\">\n                        <article className=\"user-profile-details-heading\">\n                            {userInfo?.username !== \"Please add your nickname\"\n                                ? <span> {userInfo?.username}</span>\n                                : null\n                            }\n                            <h3 className=\"user-profile-details-heading-email\">{userInfo?.email}</h3>\n                        </article>\n                        <article className=\"user-profile-details-heading\">\n                            <h2 className=\"user-profile-details-heading-about\">About Me</h2>\n                            {userInfo?.aboutMe == \"\"\n                                ? <h3>n/a</h3>\n                                : <p>User Info:  {userInfo?.aboutMe}</p>\n                            }\n                        </article>\n                    </section>\n                </section>\n\n                <section className=\"my-profile-created-stadiums\">\n                    <section className=\"list-items-section\">\n                        {stadiums\n                            ? <h2>Created Stadiums ({stadiums?.length})</h2>\n                            : <h2>Created Stadiums (0)</h2>\n                        }\n                        <section className=\"list-items\">\n                            {stadiums?.length > 0\n                                ? stadiums.map(x => <StadiumCardMyProfile key={x._id} stadiums={x} />)\n                                : <h3 className=\"list-items-results\">No stadiums added yet</h3>\n                            }\n                        </section>\n                    </section>\n                </section>\n\n                <section className=\"my-profile-comments\">\n                    <section className=\"my-profile-list-items-section\">\n                        <article className=\"my-profile-stadium-comments-all-heading\">\n                            {myStadiumComments !== undefined\n                                ? <h2>Latest Comments ({myStadiumComments?.length})</h2>\n                                : <h2 >Latest Comments (0)</h2>\n                            }\n                        </article>\n                        <article>\n                            {myStadiumComments?.length > 0\n                                ? myStadiumComments.map(x => <CommentsMyProfileCard key={x._id} myStadiumComments={x} />)\n                                : <h3 className=\"list-items-results\">No comments yet</h3>\n                            }\n                        </article>\n                    </section>\n                </section>\n            </section>\n        </>\n    );\n}\n\nexport default UserDetails;\n","import { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return {error};\n    }\n\n    componentDidCatch(error) {\n        console.log(error);\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <h1>Something went wrong</h1>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { Route, Switch } from 'react-router-dom';\nimport { isAuth } from './hoc/isAuthenticated.js';\nimport { isGuest } from './hoc/isGuest.js';\n\nimport { AuthProvider } from './contexts/AuthContext';\nimport { UpdateProvider } from './contexts/UpdateContextFooter.js';\nimport { NotificationProvider } from './contexts/NotificationContext.js';\n\nimport ScrollToTop from './hooks/useScrollToTop.js';\n\nimport Register from './components/Register/Register.js';\nimport Header from './components/Header/Header.js';\nimport Login from './components/Login/Login.js';\nimport Details from './components/Details/Details.js';\nimport Delete from './components/Delete/Delete.js';\nimport Edit from './components/Edit/Edit.js';\nimport Create from './components/Create/Create.js';\nimport Footer from './components/Footer/Footer.js';\nimport Home from './components/Home/Home.js';\nimport Logout from './components/Logout/Logout.js';\nimport MyStadiums from './components/MyStadiums/MyStadiums.js';\nimport MyProfile from './components/MyProfile/MyProfile.js';\nimport NotFound from './components/NotFound/NotFound.js';\nimport LikedStadiums from './components/Home/Filters/LikedStadiums/LikedStadiums.js';\nimport CommentedStadiums from './components/Home/Filters/CommentedStadiums/CommentedStadiums.js';\nimport BiggestCapacity from './components/Home/Filters/BiggestCapacity/BiggestCapacity.js';\nimport AlphabeticalOrder from './components/Home/Filters/AlphabeticalOrder/AlphabeticalOrder.js';\nimport ByCountry from './components/Home/Filters/ByCountry/ByCountry.js';\nimport ByCountryView from './components/Home/Filters/ByCountry/ByCountryView/ByCountryView.js';\nimport Users from './components/Users/Users.js';\nimport UserDetails from './components/UserDetails/UserDetails.js';\nimport ErrorBoundary from './components/common/ErrorBoundary.js';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <AuthProvider>\n        <UpdateProvider>\n          <NotificationProvider>\n            <section>\n              <Header />\n              <section className=\"app-container\">\n                <ScrollToTop />\n                <Switch>\n                  <Route path=\"/home/all\" exact component={Home} />\n                  <Route path=\"/\" exact component={Home} />\n                  <Route path=\"/home/liked\" exact component={LikedStadiums} />\n                  <Route path=\"/home/commented\" exact component={CommentedStadiums} />\n                  <Route path=\"/home/capacity\" exact component={BiggestCapacity} />\n                  <Route path=\"/home/alphabetical\" exact component={AlphabeticalOrder} />\n                  <Route path=\"/home/by-country\" exact component={ByCountry} />\n                  <Route path=\"/home/by-country/:country\" exact component={ByCountryView} />\n                  <Route path=\"/my-stadiums\" component={isAuth(MyStadiums)} />\n                  <Route path=\"/my-profile\" component={isAuth(MyProfile)} />\n                  <Route path=\"/stadiums/details/:stadiumId\" exact component={Details} />\n                  <Route path=\"/stadiums/details/:stadiumId/edit\" exact component={isAuth(Edit)} />\n                  <Route path=\"/stadiums/details/:stadiumId/delete\" exact component={isAuth(Delete)} />\n                  <Route path=\"/stadiums/create\" component={isAuth(Create)} />\n                  <Route path=\"/login\" component={isGuest(Login)} />\n                  <Route path=\"/register\" component={isGuest(Register)} />\n                  <Route path=\"/logout\" component={isAuth(Logout)} />\n                  <Route path=\"/users\" exact component={isAuth(Users)} />\n                  <Route path=\"/users/:userId\" exact component={isAuth(UserDetails)} />\n                  <Route path=\"*\" component={NotFound} />\n                </Switch>\n              </section>\n              <Footer />\n            </section>\n          </NotificationProvider>\n        </UpdateProvider>\n      </AuthProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}